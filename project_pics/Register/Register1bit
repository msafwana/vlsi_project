%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 714 2160 1446
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%%DocumentFonts:Courier
%******************************************************************************
%
% The preview image should preceed this file if a preview is being generated.
%
% This should be the first line: %!PS-Adobe-2.0 EPSF-1.2
% There should also be a BBox:   %%BoundingBox:0 0 300 300
%
% Cadence Design Systems -- Supports Both Level 1 and Level 2 Printers
%
% EPS Prologue -- Version 97B (aka 9702)
%
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
/gis  {
  0 setgray
  mark
  save
  newpath

  72 resolution div
  dup
  scale

  /stippleArray 10 array def
    stippleArray
     dup    0  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
	        08080404020201018080404020201010> put
	    9  <08081414222241418080414122221414
		08081414222241418080414122221414> put



  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
     /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put

    /BuildChar {
        /char exch def
        /fontdict exch def
	/charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 6 dict def
  xformdict /xformmtrx matrix put

  /rt 0 def
  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet 0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

  gsave

  } def

/cdsLevel2 /languagelevel where {pop languagelevel} {1} ifelse 2 ge def

/cdsColor cdsLevel2 not {
                          false
                          /colorimage where {pop pop true} if
                        } {
	                  true
                        } ifelse
def

/gfs  {
    grestore
    showpage
    restore
    cleartomark
  } def
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def

  } bind def
/rotp  {
  /rt 90 def
  grestore
} def
/clwin  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    rt 90 eq
      {
        pageWidth 0 translate
        rt rotate
	/rt 0 def
	gsave
      } if

    grestore
    gsave
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
    newpath
} def
/bblineto {
  dup dup   /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} def
/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} def
/ellipse
  { ellipsedict begin
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    /savematrix mtrx currentmatrix def
    x y translate
    xrad yrad scale
    0 0 1 startangle endangle arc
    savematrix setmatrix
    end
  } def
/dls  {
  gsave
  newpath
  moveto
  rlineto
  setLineColor
  stroke
  grestore
} def
/dlt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dslt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dlv  {
  rlineto
} def
/dle  {
  stroke
  grestore
} def
/mps {
  newpath
  moveto
} def
/dbu  {
    setLineColor
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } def
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave
      newpath
      x1 y1 bbmoveto
      x2 y1 bblineto
      x2 y2 bblineto
      x1 y2 bblineto
      closepath
      clip fillpath
    grestore
  } def

/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
      newpath
      x1 y1 moveto
      x2 y1 lineto
      x2 y2 lineto
      x1 y2 lineto
      closepath
      gsave
      setFillColor
      fill grestore
      setLineColor stroke

} def
/dpb { gsave
      newpath bbmoveto
} def
/dpu  {
        closepath
        setLineColor
        stroke
      grestore
} def
/dpf  {
       closepath
       clip fillpath
     grestore
} def
/dps  {
       closepath
       setFillColor
       fill grestore
       setLineColor stroke
} def
/dpv  {
    bblineto
} def
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setLineColor
      stroke
    grestore
} def
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def
    gsave
      newpath
      x y radius radius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setFillColor
      fill
    grestore
    setLineColor stroke
  } def
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
      x y xradius yradius 0 360 ellipse
      gsave
      setFillColor
      stroke
    grestore
  } def
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      setFillColor fill
    grestore
    setLineColor stroke
} def
/dau  { gsave
          newpath ellipse
          setLineColor
          stroke
        grestore
} def
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
} def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
} def

/lpon  {
    /oncount exch def
    pop
    oncount
} def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
} def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth setlinewidth
} def

/sls    { pop } def

/ssls  { [] 0 setdash
          1 setlinewidth
} def
/fillpath  {
    setFillColor
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop
    hatchSet 1 eq {setLineColor stroke} if
} def

/fds  { pop /currchar 30 def} def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } def
/fde  {
    pop
  } def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } def

  /setLineColor {
    cdsLevel2 cdsColor or {
      lineRed    1000 div
      lineGreen  1000 div
      lineBlue   1000 div
      setrgbcolor } if
  } def

  /setFillColor {
    cdsLevel2 cdsColor or {
      fillRed    1000 div
      fillGreen  1000 div
      fillBlue   1000 div
      setrgbcolor }
      { 0 setgray } ifelse
  } def

  /slc {
    /lineBlue  exch def
    /lineGreen exch def
    /lineRed   exch def
    /color 1 def
    lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
      /lineBlue  0 def
      /lineGreen 0 def
      /lineRed   0 def
    } if} if} if
  } def

  /sfc {
    /fillBlue  exch def
    /fillGreen exch def
    /fillRed   exch def
    /color 1 def
    fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
      /fillBlue  0 def
      /fillGreen 0 def
      /fillRed   0 def
    } if} if} if
  } def

%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%*****************************
%
% End of Cadence eps.prologue
%
%*****************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
 71833 72000 2400 pap
%%Page: cds 1
gis
0 23825 71833 48169 clwin
0 23825 71833 48118 clwin
0 23825 71833 48118 clwin
ssls
47911 26587 dlt
0 953 dlv
590 0 dlv
dle
363 0 47911 27086 dls
0 -635 48727 27222 dls
48727 26950 dlt
46 136 dlv
91 91 dlv
90 45 dlv
136 0 dlv
dle
49499 27222 dlt
-91 -45 dlv
-91 -91 dlv
-45 -136 dlv
0 -90 dlv
45 -137 dlv
91 -90 dlv
91 -46 dlv
136 0 dlv
91 46 dlv
90 90 dlv
46 137 dlv
0 90 dlv
-46 136 dlv
-90 91 dlv
-91 45 dlv
-136 0 dlv
dle
0 -635 50179 27222 dls
50179 27041 dlt
136 136 dlv
91 45 dlv
136 0 dlv
91 -45 dlv
45 -136 dlv
0 -454 dlv
dle
50678 27041 dlt
136 136 dlv
91 45 dlv
136 0 dlv
91 -45 dlv
45 -136 dlv
0 -454 dlv
dle
0 -953 52447 27540 dls
635 0 52130 27540 dls
52947 26950 dlt
544 0 dlv
0 91 dlv
-45 91 dlv
-46 45 dlv
-91 45 dlv
-136 0 dlv
-90 -45 dlv
-91 -91 dlv
-45 -136 dlv
0 -90 dlv
45 -137 dlv
91 -90 dlv
90 -46 dlv
136 0 dlv
91 46 dlv
91 90 dlv
dle
499 -635 53763 27222 dls
-499 -635 54262 27222 dls
54625 27540 dlt
0 -771 dlv
45 -136 dlv
91 -46 dlv
91 0 dlv
dle
318 0 54489 27222 dls
0 -953 55124 27540 dls
55124 27086 dlt
91 91 dlv
91 45 dlv
136 0 dlv
90 -45 dlv
91 -91 dlv
45 -136 dlv
0 -90 dlv
-45 -137 dlv
-91 -90 dlv
-90 -46 dlv
-136 0 dlv
-91 46 dlv
-91 90 dlv
dle
56168 27222 dlt
-91 -45 dlv
-91 -91 dlv
-45 -136 dlv
0 -90 dlv
45 -137 dlv
91 -90 dlv
91 -46 dlv
136 0 dlv
90 46 dlv
91 90 dlv
45 137 dlv
0 90 dlv
-45 136 dlv
-91 91 dlv
-90 45 dlv
-136 0 dlv
dle
57029 27222 dlt
-90 -45 dlv
-91 -91 dlv
-45 -136 dlv
0 -90 dlv
45 -137 dlv
91 -90 dlv
90 -46 dlv
137 0 dlv
90 46 dlv
91 90 dlv
45 137 dlv
0 90 dlv
-45 136 dlv
-91 91 dlv
-90 45 dlv
-137 0 dlv
dle
0 -953 57710 27540 dls
-454 -453 58164 27222 dls
318 -363 57891 26950 dls
59479 27540 dlt
-90 0 dlv
-91 -45 dlv
-46 -136 dlv
0 -772 dlv
dle
318 0 59116 27222 dls
59706 27540 dlt
45 -45 dlv
46 45 dlv
-46 45 dlv
-45 -45 dlv
dle
0 -635 59751 27222 dls
60613 27222 dlt
0 -725 dlv
-45 -137 dlv
-45 -45 dlv
-91 -45 dlv
-136 0 dlv
-91 45 dlv
dle
60613 27086 dlt
-90 91 dlv
-91 45 dlv
-136 0 dlv
-91 -45 dlv
-91 -91 dlv
-45 -136 dlv
0 -90 dlv
45 -137 dlv
91 -90 dlv
91 -46 dlv
136 0 dlv
91 46 dlv
90 90 dlv
dle
60976 27222 dlt
0 -453 dlv
46 -136 dlv
90 -46 dlv
137 0 dlv
90 46 dlv
136 136 dlv
dle
0 -635 61475 27222 dls
0 -635 61838 27222 dls
61838 26950 dlt
46 136 dlv
90 91 dlv
91 45 dlv
136 0 dlv
dle
62383 26950 dlt
544 0 dlv
0 91 dlv
-45 91 dlv
-46 45 dlv
-90 45 dlv
-136 0 dlv
-91 -45 dlv
-91 -91 dlv
-45 -136 dlv
0 -90 dlv
45 -137 dlv
91 -90 dlv
91 -46 dlv
136 0 dlv
90 46 dlv
91 90 dlv
dle
64061 27359 dlt
91 45 dlv
136 136 dlv
0 -953 dlv
dle
64969 27540 dlt
-137 -45 dlv
-90 -136 dlv
-46 -227 dlv
0 -136 dlv
46 -227 dlv
90 -136 dlv
137 -46 dlv
90 0 dlv
136 46 dlv
91 136 dlv
46 227 dlv
0 136 dlv
-46 227 dlv
-91 136 dlv
-136 45 dlv
-90 0 dlv
dle
-636 -953 65332 27540 dls
65694 26678 dlt
-45 -45 dlv
45 -46 dlv
46 46 dlv
-46 45 dlv
dle
66193 27359 dlt
91 45 dlv
136 136 dlv
0 -953 dlv
dle
67418 27222 dlt
-45 -136 dlv
-91 -90 dlv
-136 -46 dlv
-45 0 dlv
-136 46 dlv
-91 90 dlv
-45 136 dlv
0 46 dlv
45 136 dlv
91 91 dlv
136 45 dlv
45 0 dlv
136 -45 dlv
91 -91 dlv
45 -182 dlv
0 -226 dlv
-45 -227 dlv
-91 -136 dlv
-136 -46 dlv
-91 0 dlv
-136 46 dlv
-45 90 dlv
dle
68099 27721 dlt
-91 -90 dlv
-91 -136 dlv
-90 -182 dlv
-46 -227 dlv
0 -181 dlv
46 -227 dlv
90 -181 dlv
91 -137 dlv
91 -90 dlv
dle
68008 27631 dlt
-91 -182 dlv
-45 -136 dlv
-45 -227 dlv
0 -181 dlv
45 -227 dlv
45 -136 dlv
91 -182 dlv
dle
0 -635 68915 27222 dls
68915 27086 dlt
-90 91 dlv
-91 45 dlv
-136 0 dlv
-91 -45 dlv
-91 -91 dlv
-45 -136 dlv
0 -90 dlv
45 -137 dlv
91 -90 dlv
91 -46 dlv
136 0 dlv
91 46 dlv
90 90 dlv
dle
69233 27721 dlt
91 -90 dlv
90 -136 dlv
91 -182 dlv
46 -227 dlv
0 -181 dlv
-46 -227 dlv
-91 -181 dlv
-90 -137 dlv
-91 -90 dlv
dle
69324 27631 dlt
90 -182 dlv
46 -136 dlv
45 -227 dlv
0 -181 dlv
-45 -227 dlv
-46 -136 dlv
-90 -182 dlv
dle
3524 41926 dpb
3524 43641 dpv
4572 43641 dpv
5430 42783 dpv
4572 41926 dpv
dpu
31057 28493 dpb
29342 28493 dpv
29342 29541 dpv
30200 30398 dpv
31057 29541 dpv
dpu
38679 28493 dpb
36964 28493 dpv
36964 29541 dpv
37821 30398 dpv
38679 29541 dpv
dpu
66402 41926 dpb
66402 43641 dpv
67450 43641 dpv
68308 42783 dpv
67450 41926 dpv
dpu
181 0 29338 48023 dls
0 -953 29429 48023 dls
181 0 29338 47070 dls
29882 47841 dlt
91 46 dlv
136 136 dlv
0 -953 dlv
dle
30608 48023 dlt
499 0 dlv
-272 -363 dlv
136 0 dlv
91 -45 dlv
45 -46 dlv
46 -136 dlv
0 -91 dlv
-46 -136 dlv
-91 -90 dlv
-136 -46 dlv
-136 0 dlv
-136 46 dlv
-45 45 dlv
-46 91 dlv
dle
182 0 58871 48023 dls
0 -953 58962 48023 dls
182 0 58871 47070 dls
59416 47841 dlt
90 46 dlv
137 136 dlv
0 -953 dlv
dle
60731 47388 dlt
-680 0 dlv
454 635 dlv
0 -953 dlv
dle
3811 0 8288 42783 dls
0 3810 19720 35162 dls
0 3810 21626 35162 dls
8575 17148 12099 38972 dbu
-3811 0 33058 42783 dls
3811 0 37821 42783 dls
0 3810 49254 35162 dls
0 3810 51159 35162 dls
8575 17149 41632 38972 dbu
-3810 0 62591 42783 dls
15041 43736 dlt
0 -771 dlv
45 -137 dlv
91 -45 dlv
91 0 dlv
dle
317 0 14905 43418 dls
0 -635 15540 43418 dls
15540 43146 dlt
45 136 dlv
91 91 dlv
91 45 dlv
136 0 dlv
dle
0 -635 16629 43418 dls
16629 43282 dlt
-91 91 dlv
-91 45 dlv
-136 0 dlv
-91 -45 dlv
-91 -91 dlv
-45 -136 dlv
0 -91 dlv
45 -136 dlv
91 -91 dlv
91 -45 dlv
136 0 dlv
91 45 dlv
91 91 dlv
dle
0 -635 16991 43418 dls
16991 43237 dlt
137 136 dlv
90 45 dlv
136 0 dlv
91 -45 dlv
45 -136 dlv
0 -454 dlv
dle
18307 43282 dlt
-45 91 dlv
-136 45 dlv
-136 0 dlv
-137 -45 dlv
-45 -91 dlv
45 -91 dlv
91 -45 dlv
227 -45 dlv
91 -46 dlv
45 -90 dlv
0 -46 dlv
-45 -91 dlv
-136 -45 dlv
-136 0 dlv
-137 45 dlv
-45 91 dlv
dle
0 -952 18625 43418 dls
18625 43282 dlt
90 91 dlv
91 45 dlv
136 0 dlv
91 -45 dlv
91 -91 dlv
45 -136 dlv
0 -91 dlv
-45 -136 dlv
-91 -91 dlv
-91 -45 dlv
-136 0 dlv
-91 45 dlv
-90 91 dlv
dle
0 -635 19986 43418 dls
19986 43282 dlt
-91 91 dlv
-91 45 dlv
-136 0 dlv
-91 -45 dlv
-90 -91 dlv
-46 -136 dlv
0 -91 dlv
46 -136 dlv
90 -91 dlv
91 -45 dlv
136 0 dlv
91 45 dlv
91 91 dlv
dle
0 -635 20349 43418 dls
20349 43146 dlt
45 136 dlv
91 91 dlv
90 45 dlv
136 0 dlv
dle
20893 43146 dlt
544 0 dlv
0 91 dlv
-45 90 dlv
-45 46 dlv
-91 45 dlv
-136 0 dlv
-91 -45 dlv
-91 -91 dlv
-45 -136 dlv
0 -91 dlv
45 -136 dlv
91 -91 dlv
91 -45 dlv
136 0 dlv
91 45 dlv
90 91 dlv
dle
0 -635 21755 43418 dls
21755 43237 dlt
136 136 dlv
91 45 dlv
136 0 dlv
91 -45 dlv
45 -136 dlv
0 -454 dlv
dle
22662 43736 dlt
0 -771 dlv
46 -137 dlv
90 -45 dlv
91 0 dlv
dle
318 0 22526 43418 dls
0 -953 23161 43736 dls
0 -635 24023 43418 dls
24023 43282 dlt
-91 91 dlv
-90 45 dlv
-136 0 dlv
-91 -45 dlv
-91 -91 dlv
-45 -136 dlv
0 -91 dlv
45 -136 dlv
91 -91 dlv
91 -45 dlv
136 0 dlv
90 45 dlv
91 91 dlv
dle
24432 43736 dlt
0 -771 dlv
45 -137 dlv
91 -45 dlv
90 0 dlv
dle
318 0 24295 43418 dls
25430 43282 dlt
-91 91 dlv
-91 45 dlv
-136 0 dlv
-91 -45 dlv
-90 -91 dlv
-46 -136 dlv
0 -91 dlv
46 -136 dlv
90 -91 dlv
91 -45 dlv
136 0 dlv
91 45 dlv
91 91 dlv
dle
0 -953 25747 43736 dls
25747 43237 dlt
136 136 dlv
91 45 dlv
136 0 dlv
91 -45 dlv
45 -136 dlv
0 -454 dlv
dle
44574 43736 dlt
0 -771 dlv
46 -137 dlv
90 -45 dlv
91 0 dlv
dle
318 0 44438 43418 dls
0 -635 45073 43418 dls
45073 43146 dlt
46 136 dlv
90 91 dlv
91 45 dlv
136 0 dlv
dle
0 -635 46162 43418 dls
46162 43282 dlt
-91 91 dlv
-90 45 dlv
-137 0 dlv
-90 -45 dlv
-91 -91 dlv
-45 -136 dlv
0 -91 dlv
45 -136 dlv
91 -91 dlv
90 -45 dlv
137 0 dlv
90 45 dlv
91 91 dlv
dle
0 -635 46525 43418 dls
46525 43237 dlt
136 136 dlv
91 45 dlv
136 0 dlv
91 -45 dlv
45 -136 dlv
0 -454 dlv
dle
47841 43282 dlt
-46 91 dlv
-136 45 dlv
-136 0 dlv
-136 -45 dlv
-45 -91 dlv
45 -91 dlv
91 -45 dlv
226 -45 dlv
91 -46 dlv
46 -90 dlv
0 -46 dlv
-46 -91 dlv
-136 -45 dlv
-136 0 dlv
-136 45 dlv
-45 91 dlv
dle
0 -952 48158 43418 dls
48158 43282 dlt
91 91 dlv
91 45 dlv
136 0 dlv
90 -45 dlv
91 -91 dlv
45 -136 dlv
0 -91 dlv
-45 -136 dlv
-91 -91 dlv
-90 -45 dlv
-136 0 dlv
-91 45 dlv
-91 91 dlv
dle
0 -635 49519 43418 dls
49519 43282 dlt
-91 91 dlv
-90 45 dlv
-136 0 dlv
-91 -45 dlv
-91 -91 dlv
-45 -136 dlv
0 -91 dlv
45 -136 dlv
91 -91 dlv
91 -45 dlv
136 0 dlv
90 45 dlv
91 91 dlv
dle
0 -635 49882 43418 dls
49882 43146 dlt
45 136 dlv
91 91 dlv
91 45 dlv
136 0 dlv
dle
50426 43146 dlt
545 0 dlv
0 91 dlv
-46 90 dlv
-45 46 dlv
-91 45 dlv
-136 0 dlv
-90 -45 dlv
-91 -91 dlv
-46 -136 dlv
0 -91 dlv
46 -136 dlv
91 -91 dlv
90 -45 dlv
136 0 dlv
91 45 dlv
91 91 dlv
dle
0 -635 51288 43418 dls
51288 43237 dlt
136 136 dlv
91 45 dlv
136 0 dlv
91 -45 dlv
45 -136 dlv
0 -454 dlv
dle
52196 43736 dlt
0 -771 dlv
45 -137 dlv
91 -45 dlv
91 0 dlv
dle
317 0 52060 43418 dls
0 -953 52695 43736 dls
0 -635 53557 43418 dls
53557 43282 dlt
-91 91 dlv
-91 45 dlv
-136 0 dlv
-91 -45 dlv
-90 -91 dlv
-46 -136 dlv
0 -91 dlv
46 -136 dlv
90 -91 dlv
91 -45 dlv
136 0 dlv
91 45 dlv
91 91 dlv
dle
53965 43736 dlt
0 -771 dlv
45 -137 dlv
91 -45 dlv
91 0 dlv
dle
317 0 53829 43418 dls
54963 43282 dlt
-91 91 dlv
-90 45 dlv
-137 0 dlv
-90 -45 dlv
-91 -91 dlv
-45 -136 dlv
0 -91 dlv
45 -136 dlv
91 -91 dlv
90 -45 dlv
137 0 dlv
90 45 dlv
91 91 dlv
dle
0 -953 55281 43736 dls
55281 43237 dlt
136 136 dlv
90 45 dlv
137 0 dlv
90 -45 dlv
46 -136 dlv
0 -454 dlv
dle
2858 0 5430 42783 dls
0 1906 19720 33256 dls
0 953 21626 34209 dls
8574 0 21626 34209 dls
0 4764 30200 29445 dls
30676 34209 dpb
30676 34399 dpv
30581 34495 dpv
30486 34590 dpv
30390 34685 dpv
30200 34685 dpv
30009 34685 dpv
29914 34590 dpv
29819 34495 dpv
29724 34399 dpv
29724 34209 dpv
29724 34018 dpv
29819 33923 dpv
29914 33828 dpv
30009 33733 dpv
30200 33733 dpv
30390 33733 dpv
30486 33828 dpv
30581 33923 dpv
30676 34018 dpv
dps
18101 0 19720 33256 dls
4763 0 33058 42783 dls
0 3811 37821 29445 dls
38298 33256 dpb
38298 33447 dpv
38202 33542 dpv
38107 33637 dpv
38012 33733 dpv
37821 33733 dpv
37631 33733 dpv
37536 33637 dpv
37440 33542 dpv
37345 33447 dpv
37345 33256 dpv
37345 33066 dpv
37440 32970 dpv
37536 32875 dpv
37631 32780 dpv
37821 32780 dpv
38012 32780 dpv
38107 32875 dpv
38202 32970 dpv
38298 33066 dpv
dps
19054 0 30200 34209 dls
0 953 49254 34209 dls
13338 0 37821 33256 dls
0 1906 51159 33256 dls
3811 0 62591 42783 dls
1705 42307 dlt
0 952 dlv
318 0 dlv
136 -45 dlv
91 -91 dlv
45 -90 dlv
45 -137 dlv
0 -226 dlv
-45 -136 dlv
-45 -91 dlv
-91 -91 dlv
-136 -45 dlv
-318 0 dlv
dle
29950 24832 dlt
-90 -46 dlv
-91 -90 dlv
-45 -91 dlv
0 -182 dlv
45 -90 dlv
91 -91 dlv
90 -45 dlv
136 -46 dlv
227 0 dlv
136 46 dlv
91 45 dlv
91 91 dlv
45 90 dlv
0 182 dlv
-45 91 dlv
-91 90 dlv
-91 46 dlv
dle
29724 25149 dlt
952 0 dlv
0 545 dlv
dle
952 0 29724 25920 dls
635 -636 29724 26556 dls
544 409 30132 26147 dls
29905 26964 dlt
-45 91 dlv
-136 136 dlv
952 0 dlv
dle
37572 24641 dlt
-91 -45 dlv
-91 -91 dlv
-45 -91 dlv
0 -181 dlv
45 -91 dlv
91 -91 dlv
91 -45 dlv
136 -45 dlv
227 0 dlv
136 45 dlv
91 45 dlv
90 91 dlv
46 91 dlv
0 181 dlv
-46 91 dlv
-90 91 dlv
-91 45 dlv
dle
37345 24959 dlt
953 0 dlv
0 544 dlv
dle
953 0 37345 25730 dls
635 -635 37345 26365 dls
545 408 37753 25957 dls
37572 26683 dlt
-45 0 dlv
-91 45 dlv
-46 45 dlv
-45 91 dlv
0 182 dlv
45 90 dlv
46 46 dlv
91 45 dlv
90 0 dlv
91 -45 dlv
136 -91 dlv
454 -454 dlv
0 635 dlv
dle
69192 43259 dlt
-91 -45 dlv
-90 -91 dlv
-46 -90 dlv
-45 -137 dlv
0 -226 dlv
45 -136 dlv
46 -91 dlv
90 -91 dlv
91 -45 dlv
182 0 dlv
90 45 dlv
91 91 dlv
45 91 dlv
46 136 dlv
0 226 dlv
-46 137 dlv
-45 90 dlv
-91 91 dlv
-90 45 dlv
-182 0 dlv
dle
272 -272 69328 42488 dls
12852 42307 dlt
0 952 dlv
317 0 dlv
136 -45 dlv
91 -91 dlv
46 -90 dlv
45 -137 dlv
0 -226 dlv
-45 -136 dlv
-46 -91 dlv
-91 -91 dlv
-136 -45 dlv
-317 0 dlv
dle
19471 40361 dlt
-91 -46 dlv
-91 -91 dlv
-45 -90 dlv
0 -182 dlv
45 -91 dlv
91 -90 dlv
91 -46 dlv
136 -45 dlv
227 0 dlv
136 45 dlv
90 46 dlv
91 90 dlv
46 91 dlv
0 182 dlv
-46 90 dlv
-91 91 dlv
-90 46 dlv
dle
19244 40678 dlt
953 0 dlv
0 544 dlv
dle
953 0 19244 41449 dls
635 -635 19244 42084 dls
545 408 19652 41676 dls
19425 42493 dlt
-45 90 dlv
-136 137 dlv
953 0 dlv
dle
21376 40361 dlt
-91 -46 dlv
-90 -91 dlv
-46 -90 dlv
0 -182 dlv
46 -91 dlv
90 -90 dlv
91 -46 dlv
136 -45 dlv
227 0 dlv
136 45 dlv
91 46 dlv
91 90 dlv
45 91 dlv
0 182 dlv
-45 90 dlv
-91 91 dlv
-91 46 dlv
dle
21149 40678 dlt
953 0 dlv
0 544 dlv
dle
953 0 21149 41449 dls
635 -635 21149 42084 dls
544 408 21558 41676 dls
21376 42402 dlt
-45 0 dlv
-91 45 dlv
-45 46 dlv
-46 90 dlv
0 182 dlv
46 91 dlv
45 45 dlv
91 45 dlv
90 0 dlv
91 -45 dlv
136 -91 dlv
454 -453 dlv
0 635 dlv
dle
25178 43259 dlt
-91 -45 dlv
-91 -91 dlv
-45 -90 dlv
-45 -137 dlv
0 -226 dlv
45 -136 dlv
45 -91 dlv
91 -91 dlv
91 -45 dlv
181 0 dlv
91 45 dlv
91 91 dlv
45 91 dlv
45 136 dlv
0 226 dlv
-45 137 dlv
-45 90 dlv
-91 91 dlv
-91 45 dlv
-181 0 dlv
dle
272 -272 25314 42488 dls
25949 42806 dlt
408 0 dlv
136 -46 dlv
46 -45 dlv
45 -91 dlv
0 -136 dlv
-45 -91 dlv
-46 -45 dlv
-136 -45 dlv
-408 0 dlv
0 952 dlv
408 0 dlv
136 -45 dlv
46 -45 dlv
45 -91 dlv
0 -91 dlv
-45 -91 dlv
-46 -45 dlv
-136 -45 dlv
dle
26766 42307 dlt
363 952 dlv
362 -952 dlv
dle
453 0 26902 42624 dls
27764 42307 dlt
0 952 dlv
408 0 dlv
136 -45 dlv
45 -45 dlv
46 -91 dlv
0 -91 dlv
-46 -91 dlv
-45 -45 dlv
-136 -45 dlv
-408 0 dlv
dle
318 -499 28081 42806 dls
42385 42307 dlt
0 952 dlv
318 0 dlv
136 -45 dlv
91 -91 dlv
45 -90 dlv
45 -137 dlv
0 -226 dlv
-45 -136 dlv
-45 -91 dlv
-91 -91 dlv
-136 -45 dlv
-318 0 dlv
dle
49004 40361 dlt
-91 -46 dlv
-90 -91 dlv
-46 -90 dlv
0 -182 dlv
46 -91 dlv
90 -90 dlv
91 -46 dlv
136 -45 dlv
227 0 dlv
136 45 dlv
91 46 dlv
91 90 dlv
45 91 dlv
0 182 dlv
-45 90 dlv
-91 91 dlv
-91 46 dlv
dle
48777 40678 dlt
953 0 dlv
0 544 dlv
dle
953 0 48777 41449 dls
635 -635 48777 42084 dls
544 408 49186 41676 dls
48959 42493 dlt
-46 90 dlv
-136 137 dlv
953 0 dlv
dle
50910 40361 dlt
-91 -46 dlv
-91 -91 dlv
-45 -90 dlv
0 -182 dlv
45 -91 dlv
91 -90 dlv
91 -46 dlv
136 -45 dlv
226 0 dlv
137 45 dlv
90 46 dlv
91 90 dlv
45 91 dlv
0 182 dlv
-45 90 dlv
-91 91 dlv
-90 46 dlv
dle
50683 40678 dlt
952 0 dlv
0 544 dlv
dle
952 0 50683 41449 dls
635 -635 50683 42084 dls
544 408 51091 41676 dls
50910 42402 dlt
-46 0 dlv
-91 45 dlv
-45 46 dlv
-45 90 dlv
0 182 dlv
45 91 dlv
45 45 dlv
91 45 dlv
91 0 dlv
91 -45 dlv
136 -91 dlv
453 -453 dlv
0 635 dlv
dle
54711 43259 dlt
-90 -45 dlv
-91 -91 dlv
-46 -90 dlv
-45 -137 dlv
0 -226 dlv
45 -136 dlv
46 -91 dlv
91 -91 dlv
90 -45 dlv
182 0 dlv
90 45 dlv
91 91 dlv
46 91 dlv
45 136 dlv
0 226 dlv
-45 137 dlv
-46 90 dlv
-91 91 dlv
-90 45 dlv
-182 0 dlv
dle
273 -272 54847 42488 dls
55482 42806 dlt
409 0 dlv
136 -46 dlv
45 -45 dlv
46 -91 dlv
0 -136 dlv
-46 -91 dlv
-45 -45 dlv
-136 -45 dlv
-409 0 dlv
0 952 dlv
409 0 dlv
136 -45 dlv
45 -45 dlv
46 -91 dlv
0 -91 dlv
-46 -91 dlv
-45 -45 dlv
-136 -45 dlv
dle
56299 42307 dlt
363 952 dlv
363 -952 dlv
dle
454 0 56435 42624 dls
57297 42307 dlt
0 952 dlv
408 0 dlv
137 -45 dlv
45 -45 dlv
45 -91 dlv
0 -91 dlv
-45 -91 dlv
-45 -45 dlv
-137 -45 dlv
-408 0 dlv
dle
317 -499 57615 42806 dls
3524 41926 dpb
3524 43641 dpv
4572 43641 dpv
5430 42783 dpv
4572 41926 dpv
dps
31057 28493 dpb
29342 28493 dpv
29342 29541 dpv
30200 30398 dpv
31057 29541 dpv
dps
38679 28493 dpb
36964 28493 dpv
36964 29541 dpv
37821 30398 dpv
38679 29541 dpv
dps
7907 42402 8669 43164 dbs
19339 34780 20101 35543 dbs
21245 34780 22007 35543 dbs
32677 42402 33439 43164 dbs
37440 42402 38202 43164 dbs
48873 34780 49635 35543 dbs
50778 34780 51540 35543 dbs
62210 42402 62972 43164 dbs
66402 41926 dpb
66402 43641 dpv
67450 43641 dpv
68308 42783 dpv
67450 41926 dpv
dps
0 23825 71833 48175 clwin
gfs
%%Trailer
%%EOF
