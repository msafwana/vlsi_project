%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 1616 2156
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%%DocumentFonts:Courier
%******************************************************************************
%
% The preview image should preceed this file if a preview is being generated.
%
% This should be the first line: %!PS-Adobe-2.0 EPSF-1.2
% There should also be a BBox:   %%BoundingBox:0 0 300 300
%
% Cadence Design Systems -- Supports Both Level 1 and Level 2 Printers
%
% EPS Prologue -- Version 97B (aka 9702)
%
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
/gis  {
  0 setgray
  mark
  save
  newpath

  72 resolution div
  dup
  scale

  /stippleArray 10 array def
    stippleArray
     dup    0  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
	        08080404020201018080404020201010> put
	    9  <08081414222241418080414122221414
		08081414222241418080414122221414> put



  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
     /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put

    /BuildChar {
        /char exch def
        /fontdict exch def
	/charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 6 dict def
  xformdict /xformmtrx matrix put

  /rt 0 def
  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet 0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

  gsave

  } def

/cdsLevel2 /languagelevel where {pop languagelevel} {1} ifelse 2 ge def

/cdsColor cdsLevel2 not {
                          false
                          /colorimage where {pop pop true} if
                        } {
	                  true
                        } ifelse
def

/gfs  {
    grestore
    showpage
    restore
    cleartomark
  } def
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def

  } bind def
/rotp  {
  /rt 90 def
  grestore
} def
/clwin  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    rt 90 eq
      {
        pageWidth 0 translate
        rt rotate
	/rt 0 def
	gsave
      } if

    grestore
    gsave
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
    newpath
} def
/bblineto {
  dup dup   /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} def
/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} def
/ellipse
  { ellipsedict begin
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    /savematrix mtrx currentmatrix def
    x y translate
    xrad yrad scale
    0 0 1 startangle endangle arc
    savematrix setmatrix
    end
  } def
/dls  {
  gsave
  newpath
  moveto
  rlineto
  setLineColor
  stroke
  grestore
} def
/dlt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dslt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dlv  {
  rlineto
} def
/dle  {
  stroke
  grestore
} def
/mps {
  newpath
  moveto
} def
/dbu  {
    setLineColor
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } def
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave
      newpath
      x1 y1 bbmoveto
      x2 y1 bblineto
      x2 y2 bblineto
      x1 y2 bblineto
      closepath
      clip fillpath
    grestore
  } def

/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
      newpath
      x1 y1 moveto
      x2 y1 lineto
      x2 y2 lineto
      x1 y2 lineto
      closepath
      gsave
      setFillColor
      fill grestore
      setLineColor stroke

} def
/dpb { gsave
      newpath bbmoveto
} def
/dpu  {
        closepath
        setLineColor
        stroke
      grestore
} def
/dpf  {
       closepath
       clip fillpath
     grestore
} def
/dps  {
       closepath
       setFillColor
       fill grestore
       setLineColor stroke
} def
/dpv  {
    bblineto
} def
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setLineColor
      stroke
    grestore
} def
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def
    gsave
      newpath
      x y radius radius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setFillColor
      fill
    grestore
    setLineColor stroke
  } def
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
      x y xradius yradius 0 360 ellipse
      gsave
      setFillColor
      stroke
    grestore
  } def
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      setFillColor fill
    grestore
    setLineColor stroke
} def
/dau  { gsave
          newpath ellipse
          setLineColor
          stroke
        grestore
} def
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
} def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
} def

/lpon  {
    /oncount exch def
    pop
    oncount
} def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
} def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth setlinewidth
} def

/sls    { pop } def

/ssls  { [] 0 setdash
          1 setlinewidth
} def
/fillpath  {
    setFillColor
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop
    hatchSet 1 eq {setLineColor stroke} if
} def

/fds  { pop /currchar 30 def} def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } def
/fde  {
    pop
  } def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } def

  /setLineColor {
    cdsLevel2 cdsColor or {
      lineRed    1000 div
      lineGreen  1000 div
      lineBlue   1000 div
      setrgbcolor } if
  } def

  /setFillColor {
    cdsLevel2 cdsColor or {
      fillRed    1000 div
      fillGreen  1000 div
      fillBlue   1000 div
      setrgbcolor }
      { 0 setgray } ifelse
  } def

  /slc {
    /lineBlue  exch def
    /lineGreen exch def
    /lineRed   exch def
    /color 1 def
    lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
      /lineBlue  0 def
      /lineGreen 0 def
      /lineRed   0 def
    } if} if} if
  } def

  /sfc {
    /fillBlue  exch def
    /fillGreen exch def
    /fillRed   exch def
    /color 1 def
    fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
      /fillBlue  0 def
      /fillGreen 0 def
      /fillRed   0 def
    } if} if} if
  } def

%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%*****************************
%
% End of Cadence eps.prologue
%
%*****************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
 53818 72000 2400 pap
%%Page: cds 1
gis
163 0 53654 71757 clwin
0 0 53709 71855 clwin
0 0 53709 71855 clwin
ssls
28790 42304 dlt
968 276 dlv
-968 277 dlv
968 276 dlv
-968 277 dlv
dle
0 1244 28928 43894 dls
0 1244 29343 43894 dls
28652 45691 dlt
-69 0 dlv
-139 69 dlv
-69 69 dlv
-69 138 dlv
0 277 dlv
69 138 dlv
69 69 dlv
139 69 dlv
138 0 dlv
138 -69 dlv
207 -138 dlv
692 -691 dlv
0 967 dlv
dle
29274 48041 dlt
0 -1037 dlv
-968 691 dlv
1452 0 dlv
dle
28306 48801 dlt
69 -207 dlv
208 -138 dlv
345 -69 dlv
208 0 dlv
345 69 dlv
208 138 dlv
69 207 dlv
0 139 dlv
-69 207 dlv
-208 138 dlv
-345 69 dlv
-208 0 dlv
-345 -69 dlv
-208 -138 dlv
-69 -207 dlv
0 -139 dlv
dle
1452 -967 28306 49354 dls
968 0 28790 49838 dls
29066 49838 dlt
-207 208 dlv
-69 138 dlv
0 207 dlv
69 139 dlv
207 69 dlv
692 0 dlv
dle
17116 15864 dlt
1210 345 dlv
-1210 346 dlv
1210 345 dlv
-1210 346 dlv
dle
0 1556 17289 19233 dls
0 1556 17808 19233 dls
16857 23035 dlt
-86 173 dlv
-259 259 dlv
1814 0 dlv
dle
16944 24331 dlt
-87 0 dlv
-173 87 dlv
-86 86 dlv
-86 173 dlv
0 346 dlv
86 172 dlv
86 87 dlv
173 86 dlv
173 0 dlv
173 -86 dlv
259 -173 dlv
864 -864 dlv
0 1210 dlv
dle
16512 26491 dlt
86 -259 dlv
259 -173 dlv
432 -86 dlv
260 0 dlv
432 86 dlv
259 173 dlv
86 259 dlv
0 173 dlv
-86 260 dlv
-259 172 dlv
-432 87 dlv
-260 0 dlv
-432 -87 dlv
-259 -172 dlv
-86 -260 dlv
0 -173 dlv
dle
1814 -1210 16512 27183 dls
1210 0 17116 27788 dls
17462 27788 dlt
-259 259 dlv
-87 173 dlv
0 259 dlv
87 173 dlv
259 86 dlv
864 0 dlv
dle
21048 24953 dlt
-1452 0 dlv
1452 968 dlv
-1452 0 dlv
dle
21048 26474 dlt
-1452 0 dlv
1452 553 dlv
-1452 553 dlv
1452 0 dlv
dle
19596 28479 dlt
69 -208 dlv
208 -138 dlv
345 -69 dlv
208 0 dlv
345 69 dlv
208 138 dlv
69 208 dlv
0 138 dlv
-69 207 dlv
-208 139 dlv
-345 69 dlv
-208 0 dlv
-345 -69 dlv
-208 -139 dlv
-69 -207 dlv
0 -138 dlv
dle
1452 -968 19596 29032 dls
35201 45639 dlt
-1451 0 dlv
0 622 dlv
69 207 dlv
69 70 dlv
138 69 dlv
207 0 dlv
139 -69 dlv
69 -70 dlv
69 -207 dlv
0 -622 dlv
dle
35201 47091 dlt
-1451 0 dlv
1451 553 dlv
-1451 553 dlv
1451 0 dlv
dle
33750 49095 dlt
69 -207 dlv
207 -138 dlv
346 -70 dlv
207 0 dlv
346 70 dlv
207 138 dlv
69 207 dlv
0 138 dlv
-69 208 dlv
-207 138 dlv
-346 69 dlv
-207 0 dlv
-346 -69 dlv
-207 -138 dlv
-69 -208 dlv
0 -138 dlv
dle
1451 -968 33750 49648 dls
23770 3084 dpb
23770 6350 dpv
25766 6350 dpv
27399 4717 dpv
25766 3084 dpv
dpu
12883 35564 dpb
11250 37197 dpv
9072 37197 dpv
7439 35564 dpv
9072 33931 dpv
11250 33931 dpv
dpu
50988 35564 dpb
49354 37197 dpv
47177 37197 dpv
45544 35564 dpv
47177 33931 dpv
49354 33931 dpv
dpu
25584 68407 dpb
25584 71673 dpv
27580 71673 dpv
29213 70040 dpv
27580 68407 dpv
dpu
0 7259 27399 26491 dls
-9073 0 31935 33750 dls
0 2722 27399 15604 dls
5444 0 24677 18326 dls
-5444 0 30121 19233 dls
30121 19233 dlt
0 3629 dlv
2721 0 dlv
dle
0 3629 27399 19233 dls
24677 19233 dlt
0 3629 dlv
-2722 0 dlv
dle
29213 21048 dlt
908 1814 dlv
907 -1814 dlv
dle
0 -7258 27399 48266 dls
-9073 0 31935 41008 dls
0 -2722 27399 59153 dls
-5444 0 30121 56431 dls
5444 0 24677 55524 dls
31028 52439 dlt
-907 1815 dlv
-908 -1815 dlv
dle
0 -3629 27399 55524 dls
30121 55524 dlt
0 -3629 dlv
2721 0 dlv
dle
24677 55524 dlt
0 -3629 dlv
-2722 0 dlv
dle
968 0 20080 12978 dls
20357 12978 dlt
-208 207 dlv
-69 138 dlv
0 208 dlv
69 138 dlv
208 69 dlv
691 0 dlv
dle
968 0 20080 14291 dls
20357 14291 dlt
-208 207 dlv
-69 139 dlv
0 207 dlv
69 138 dlv
208 69 dlv
691 0 dlv
dle
20357 15051 dlt
-208 208 dlv
-69 138 dlv
0 207 dlv
69 139 dlv
208 69 dlv
691 0 dlv
dle
20080 16641 dlt
69 -138 dlv
139 -138 dlv
207 -69 dlv
138 0 dlv
208 69 dlv
138 138 dlv
69 138 dlv
0 208 dlv
-69 138 dlv
-138 138 dlv
-208 69 dlv
-138 0 dlv
-207 -69 dlv
-139 -138 dlv
-69 -138 dlv
0 -208 dlv
dle
20288 18369 dlt
-139 -69 dlv
-69 -207 dlv
0 -208 dlv
69 -207 dlv
139 -69 dlv
138 69 dlv
69 138 dlv
69 346 dlv
69 138 dlv
138 69 dlv
70 0 dlv
138 -69 dlv
69 -207 dlv
0 -208 dlv
-69 -207 dlv
-138 -69 dlv
dle
19873 18991 dlt
-69 139 dlv
-208 207 dlv
1452 0 dlv
dle
20080 19890 dlt
968 415 dlv
-968 415 dlv
dle
1452 0 33689 53986 dls
33896 53986 dlt
-138 138 dlv
-69 138 dlv
0 208 dlv
69 138 dlv
138 138 dlv
208 69 dlv
138 0 dlv
207 -69 dlv
139 -138 dlv
69 -138 dlv
0 -208 dlv
-69 -138 dlv
-139 -138 dlv
dle
968 0 33689 55299 dls
33966 55299 dlt
-208 208 dlv
-69 138 dlv
0 207 dlv
69 138 dlv
208 70 dlv
691 0 dlv
dle
33966 56060 dlt
-208 207 dlv
-69 138 dlv
0 208 dlv
69 138 dlv
208 69 dlv
691 0 dlv
dle
33689 57649 dlt
69 -138 dlv
138 -138 dlv
208 -69 dlv
138 0 dlv
207 69 dlv
139 138 dlv
69 138 dlv
0 208 dlv
-69 138 dlv
-139 138 dlv
-207 69 dlv
-138 0 dlv
-208 -69 dlv
-138 -138 dlv
-69 -138 dlv
0 -208 dlv
dle
33896 59378 dlt
-138 -70 dlv
-69 -207 dlv
0 -207 dlv
69 -208 dlv
138 -69 dlv
139 69 dlv
69 139 dlv
69 345 dlv
69 138 dlv
138 70 dlv
69 0 dlv
139 -70 dlv
69 -207 dlv
0 -207 dlv
-69 -208 dlv
-139 -69 dlv
dle
33482 60000 dlt
-69 138 dlv
-208 207 dlv
1452 0 dlv
dle
33689 60898 dlt
968 415 dlv
-968 415 dlv
dle
3629 0 11068 35564 dls
0 16331 14697 35564 dls
15604 35564 dpb
15604 35746 dpv
15423 35927 dpv
15423 36108 dpv
15241 36290 dpv
15060 36471 dpv
14879 36471 dpv
14697 36471 dpv
14516 36471 dpv
14334 36290 dpv
14153 36290 dpv
13971 36108 dpv
13790 35927 dpv
13790 35746 dpv
13790 35383 dpv
13790 35201 dpv
13971 35020 dpv
14153 34838 dpv
14516 34657 dpv
14697 34657 dpv
14879 34657 dpv
15060 34657 dpv
15241 34838 dpv
15423 35020 dpv
15423 35201 dpv
15604 35383 dpv
dps
3629 0 14697 35564 dls
0 12702 18326 22862 dls
7258 0 14697 51895 dls
3629 0 18326 22862 dls
0 10887 27399 4717 dls
0 10887 27399 59153 dls
0 3629 27399 48266 dls
0 3629 27399 22862 dls
0 1815 27399 26491 dls
0 1815 27399 46451 dls
1814 0 27399 70040 dls
3629 0 32842 22862 dls
0 12702 36471 22862 dls
7258 0 32842 51895 dls
3629 0 36471 35564 dls
0 16331 40100 35564 dls
41008 35564 dpb
41008 35746 dpv
40826 35927 dpv
40826 36108 dpv
40645 36290 dpv
40463 36471 dpv
40282 36471 dpv
40100 36471 dpv
39919 36471 dpv
39737 36290 dpv
39556 36290 dpv
39375 36108 dpv
39193 35927 dpv
39193 35746 dpv
39193 35383 dpv
39193 35201 dpv
39375 35020 dpv
39556 34838 dpv
39919 34657 dpv
40100 34657 dpv
40282 34657 dpv
40463 34657 dpv
40645 34838 dpv
40826 35020 dpv
40826 35201 dpv
41008 35383 dpv
dps
9073 0 40100 35564 dls
16434 5192 dlt
-87 173 dlv
-172 173 dlv
-173 87 dlv
-346 0 dlv
-173 -87 dlv
-172 -173 dlv
-87 -173 dlv
-86 -259 dlv
0 -432 dlv
86 -259 dlv
87 -173 dlv
172 -173 dlv
173 -86 dlv
346 0 dlv
173 86 dlv
172 173 dlv
87 173 dlv
dle
17039 5625 dlt
0 -1815 dlv
1037 0 dlv
dle
0 -1815 18508 5625 dls
-1209 -1210 19717 5625 dls
777 -1037 18940 4847 dls
20322 5192 dlt
0 87 dlv
87 173 dlv
86 86 dlv
173 87 dlv
345 0 dlv
173 -87 dlv
87 -86 dlv
86 -173 dlv
0 -173 dlv
-86 -173 dlv
-173 -259 dlv
-864 -864 dlv
1209 0 dlv
dle
52059 35607 dlt
778 0 dlv
259 -86 dlv
86 -87 dlv
87 -172 dlv
0 -260 dlv
-87 -172 dlv
-86 -87 dlv
-259 -86 dlv
-778 0 dlv
0 1814 dlv
778 0 dlv
259 -86 dlv
86 -86 dlv
87 -173 dlv
0 -173 dlv
-87 -173 dlv
-86 -86 dlv
-259 -87 dlv
dle
4804 34657 dlt
691 1814 dlv
691 -1814 dlv
dle
864 0 5063 35262 dls
18611 70515 dlt
-86 173 dlv
-173 173 dlv
-173 86 dlv
-345 0 dlv
-173 -86 dlv
-173 -173 dlv
-86 -173 dlv
-87 -259 dlv
0 -432 dlv
87 -259 dlv
86 -173 dlv
173 -173 dlv
173 -86 dlv
345 0 dlv
173 86 dlv
173 173 dlv
86 173 dlv
dle
19216 70947 dlt
0 -1814 dlv
1037 0 dlv
dle
0 -1814 20685 70947 dls
-1210 -1209 21895 70947 dls
778 -1037 21117 70170 dls
22672 70602 dlt
173 86 dlv
259 259 dlv
0 -1814 dlv
dle
22439 31875 dlt
363 -847 dlv
363 847 dlv
dle
24133 31693 dlt
-61 121 dlv
-181 61 dlv
-182 0 dlv
-181 -61 dlv
-61 -121 dlv
61 -121 dlv
121 -60 dlv
302 -61 dlv
121 -60 dlv
61 -121 dlv
0 -61 dlv
-61 -121 dlv
-181 -60 dlv
-182 0 dlv
-181 60 dlv
-61 121 dlv
dle
25161 31693 dlt
-61 121 dlv
-181 61 dlv
-182 0 dlv
-181 -61 dlv
-60 -121 dlv
60 -121 dlv
121 -60 dlv
302 -61 dlv
121 -60 dlv
61 -121 dlv
0 -61 dlv
-61 -121 dlv
-181 -60 dlv
-182 0 dlv
-181 60 dlv
-60 121 dlv
dle
22258 44213 dlt
363 -846 dlv
362 846 dlv
dle
0 -1270 24012 44637 dls
24012 44032 dlt
-121 121 dlv
-121 60 dlv
-182 0 dlv
-121 -60 dlv
-121 -121 dlv
-60 -182 dlv
0 -121 dlv
60 -181 dlv
121 -121 dlv
121 -60 dlv
182 0 dlv
121 60 dlv
121 121 dlv
dle
0 -1270 25161 44637 dls
25161 44032 dlt
-121 121 dlv
-121 60 dlv
-182 0 dlv
-121 -60 dlv
-120 -121 dlv
-61 -182 dlv
0 -121 dlv
61 -181 dlv
120 -121 dlv
121 -60 dlv
182 0 dlv
121 60 dlv
121 121 dlv
dle
23770 3084 dpb
23770 6350 dpv
25766 6350 dpv
27399 4717 dpv
25766 3084 dpv
dps
26673 25766 28125 27217 dbs
12883 35564 dpb
11250 33931 dpv
9072 33931 dpv
7439 35564 dpv
9072 37197 dpv
11250 37197 dpv
dps
50988 35564 dpb
49354 33931 dpv
47177 33931 dpv
45544 35564 dpv
47177 37197 dpv
49354 37197 dpv
dps
26673 14879 28125 16330 dbs
21229 22137 22681 23588 dbs
26673 22137 28125 23588 dbs
32117 22137 33568 23588 dbs
26673 47540 28125 48992 dbs
26673 58427 28125 59879 dbs
21229 51169 22681 52621 dbs
26673 51169 28125 52621 dbs
32117 51169 33568 52621 dbs
25584 68407 dpb
25584 71673 dpv
27580 71673 dpv
29213 70040 dpv
27580 68407 dpv
dps
0 0 53818 71855 clwin
gfs
%%Trailer
%%EOF
