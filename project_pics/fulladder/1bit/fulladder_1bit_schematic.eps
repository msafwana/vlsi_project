%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 2160 1195
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%%DocumentFonts:Courier
%******************************************************************************
%
% The preview image should preceed this file if a preview is being generated.
%
% This should be the first line: %!PS-Adobe-2.0 EPSF-1.2
% There should also be a BBox:   %%BoundingBox:0 0 300 300
%
% Cadence Design Systems -- Supports Both Level 1 and Level 2 Printers
%
% EPS Prologue -- Version 97B (aka 9702)
%
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
/gis  {
  0 setgray
  mark
  save
  newpath

  72 resolution div
  dup
  scale

  /stippleArray 10 array def
    stippleArray
     dup    0  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
	        08080404020201018080404020201010> put
	    9  <08081414222241418080414122221414
		08081414222241418080414122221414> put



  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
     /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put

    /BuildChar {
        /char exch def
        /fontdict exch def
	/charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 6 dict def
  xformdict /xformmtrx matrix put

  /rt 0 def
  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet 0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

  gsave

  } def

/cdsLevel2 /languagelevel where {pop languagelevel} {1} ifelse 2 ge def

/cdsColor cdsLevel2 not {
                          false
                          /colorimage where {pop pop true} if
                        } {
	                  true
                        } ifelse
def

/gfs  {
    grestore
    showpage
    restore
    cleartomark
  } def
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def

  } bind def
/rotp  {
  /rt 90 def
  grestore
} def
/clwin  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    rt 90 eq
      {
        pageWidth 0 translate
        rt rotate
	/rt 0 def
	gsave
      } if

    grestore
    gsave
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
    newpath
} def
/bblineto {
  dup dup   /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} def
/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} def
/ellipse
  { ellipsedict begin
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    /savematrix mtrx currentmatrix def
    x y translate
    xrad yrad scale
    0 0 1 startangle endangle arc
    savematrix setmatrix
    end
  } def
/dls  {
  gsave
  newpath
  moveto
  rlineto
  setLineColor
  stroke
  grestore
} def
/dlt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dslt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dlv  {
  rlineto
} def
/dle  {
  stroke
  grestore
} def
/mps {
  newpath
  moveto
} def
/dbu  {
    setLineColor
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } def
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave
      newpath
      x1 y1 bbmoveto
      x2 y1 bblineto
      x2 y2 bblineto
      x1 y2 bblineto
      closepath
      clip fillpath
    grestore
  } def

/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
      newpath
      x1 y1 moveto
      x2 y1 lineto
      x2 y2 lineto
      x1 y2 lineto
      closepath
      gsave
      setFillColor
      fill grestore
      setLineColor stroke

} def
/dpb { gsave
      newpath bbmoveto
} def
/dpu  {
        closepath
        setLineColor
        stroke
      grestore
} def
/dpf  {
       closepath
       clip fillpath
     grestore
} def
/dps  {
       closepath
       setFillColor
       fill grestore
       setLineColor stroke
} def
/dpv  {
    bblineto
} def
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setLineColor
      stroke
    grestore
} def
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def
    gsave
      newpath
      x y radius radius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setFillColor
      fill
    grestore
    setLineColor stroke
  } def
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
      x y xradius yradius 0 360 ellipse
      gsave
      setFillColor
      stroke
    grestore
  } def
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      setFillColor fill
    grestore
    setLineColor stroke
} def
/dau  { gsave
          newpath ellipse
          setLineColor
          stroke
        grestore
} def
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
} def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
} def

/lpon  {
    /oncount exch def
    pop
    oncount
} def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
} def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth setlinewidth
} def

/sls    { pop } def

/ssls  { [] 0 setdash
          1 setlinewidth
} def
/fillpath  {
    setFillColor
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop
    hatchSet 1 eq {setLineColor stroke} if
} def

/fds  { pop /currchar 30 def} def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } def
/fde  {
    pop
  } def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } def

  /setLineColor {
    cdsLevel2 cdsColor or {
      lineRed    1000 div
      lineGreen  1000 div
      lineBlue   1000 div
      setrgbcolor } if
  } def

  /setFillColor {
    cdsLevel2 cdsColor or {
      fillRed    1000 div
      fillGreen  1000 div
      fillBlue   1000 div
      setrgbcolor }
      { 0 setgray } ifelse
  } def

  /slc {
    /lineBlue  exch def
    /lineGreen exch def
    /lineRed   exch def
    /color 1 def
    lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
      /lineBlue  0 def
      /lineGreen 0 def
      /lineRed   0 def
    } if} if} if
  } def

  /sfc {
    /fillBlue  exch def
    /fillGreen exch def
    /fillRed   exch def
    /color 1 def
    fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
      /fillBlue  0 def
      /fillGreen 0 def
      /fillRed   0 def
    } if} if} if
  } def

%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%*****************************
%
% End of Cadence eps.prologue
%
%*****************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
 71988 72000 2400 pap
%%Page: cds 1
gis
0 0 71934 39827 clwin
0 0 71988 39820 clwin
0 0 71988 39820 clwin
ssls
68254 10639 dpb
68254 11759 dpv
68939 11759 dpv
69499 11199 dpv
68939 10639 dpv
dpu
2302 24327 dpb
2302 25447 dpv
2986 25447 dpv
3546 24887 dpv
2986 24327 dpv
dpu
63899 31171 dpb
63899 32291 dpv
64583 32291 dpv
65143 31731 dpv
64583 31171 dpv
dpu
2302 36149 dpb
2302 37269 dpv
2986 37269 dpv
3546 36709 dpv
2986 36149 dpv
dpu
2302 37393 dpb
2302 38513 dpv
2986 38513 dpv
3546 37953 dpv
2986 37393 dpv
dpu
118 0 46537 7777 dls
0 -622 46596 7777 dls
118 0 46537 7155 dls
46892 7658 dlt
60 30 dlv
88 89 dlv
0 -622 dlv
dle
118 0 46537 20843 dls
0 -622 46596 20843 dls
118 0 46537 20221 dls
46833 20695 dlt
0 30 dlv
30 59 dlv
29 29 dlv
60 30 dlv
118 0 dlv
59 -30 dlv
30 -29 dlv
30 -59 dlv
0 -60 dlv
-30 -59 dlv
-59 -89 dlv
-297 -296 dlv
415 0 dlv
dle
119 0 29115 33287 dls
0 -622 29175 33287 dls
119 0 29115 32665 dls
29826 32872 dlt
-444 0 dlv
296 415 dlv
0 -622 dlv
dle
119 0 12938 38887 dls
0 -622 12997 38887 dls
119 0 12938 38265 dls
13560 38887 dlt
-296 0 dlv
-30 -267 dlv
30 30 dlv
89 29 dlv
89 0 dlv
89 -29 dlv
59 -60 dlv
30 -88 dlv
0 -60 dlv
-30 -89 dlv
-59 -59 dlv
-89 -29 dlv
-89 0 dlv
-89 29 dlv
-30 30 dlv
-29 59 dlv
dle
2489 0 31545 3110 dls
-2489 0 44611 3733 dls
2489 0 31545 4977 dls
34034 6221 dlt
0 -4977 dlv
6844 0 dlv
dle
40878 1244 dlt
311 249 dlv
249 311 dlv
186 311 dlv
187 311 dlv
187 373 dlv
62 374 dlv
62 373 dlv
0 373 dlv
-62 374 dlv
-62 373 dlv
-187 373 dlv
-187 311 dlv
-186 311 dlv
-249 312 dlv
-311 248 dlv
dle
6844 0 34034 6221 dls
3111 0 55188 9955 dls
57677 8710 dlt
436 -62 dlv
435 -62 dlv
373 0 dlv
436 62 dlv
435 124 dlv
374 187 dlv
373 187 dlv
373 249 dlv
312 311 dlv
248 311 dlv
249 373 dlv
187 373 dlv
124 436 dlv
dle
-2489 0 64521 11199 dls
3111 0 55188 11821 dls
57677 8710 dlt
187 436 dlv
186 373 dlv
125 436 dlv
124 497 dlv
0 436 dlv
0 435 dlv
-124 498 dlv
-125 436 dlv
-186 373 dlv
-187 436 dlv
dle
62032 11199 dlt
-186 373 dlv
-187 311 dlv
-249 374 dlv
-311 249 dlv
-311 249 dlv
-373 186 dlv
-374 187 dlv
-373 124 dlv
-373 62 dlv
-436 0 dlv
-373 -62 dlv
-436 -62 dlv
-373 -124 dlv
dle
2489 0 31545 16177 dls
-2489 0 44611 16799 dls
2489 0 31545 18043 dls
34034 19288 dlt
0 -4978 dlv
6844 0 dlv
dle
40878 14310 dlt
311 249 dlv
249 311 dlv
186 311 dlv
187 311 dlv
187 373 dlv
62 374 dlv
62 373 dlv
0 373 dlv
-62 374 dlv
-62 373 dlv
-187 373 dlv
-187 311 dlv
-186 312 dlv
-249 311 dlv
-311 249 dlv
dle
6844 0 34034 19288 dls
3111 0 25945 31109 dls
29056 29865 dlt
498 -62 dlv
435 -63 dlv
498 0 dlv
436 63 dlv
435 62 dlv
498 187 dlv
435 186 dlv
374 187 dlv
373 311 dlv
373 311 dlv
311 311 dlv
312 373 dlv
dle
-2488 0 36522 31731 dls
3111 0 25945 32354 dls
29056 29865 dlt
187 311 dlv
186 311 dlv
187 311 dlv
62 373 dlv
62 374 dlv
0 373 dlv
-62 373 dlv
-62 374 dlv
-187 311 dlv
-186 311 dlv
-187 311 dlv
dle
28434 29865 dlt
249 311 dlv
124 373 dlv
125 374 dlv
124 435 dlv
0 373 dlv
0 374 dlv
-124 435 dlv
-125 374 dlv
-124 373 dlv
-249 311 dlv
dle
34034 31731 dlt
-312 374 dlv
-311 311 dlv
-373 311 dlv
-373 311 dlv
-374 187 dlv
-435 186 dlv
-498 187 dlv
-435 62 dlv
-436 62 dlv
-498 0 dlv
-435 -62 dlv
-498 -62 dlv
dle
3111 0 9768 36709 dls
12879 35465 dlt
498 -63 dlv
435 -62 dlv
498 0 dlv
436 62 dlv
435 63 dlv
498 186 dlv
435 187 dlv
374 187 dlv
373 311 dlv
373 311 dlv
311 311 dlv
312 373 dlv
dle
-2488 0 20345 37331 dls
3111 0 9768 37953 dls
12879 35465 dlt
187 311 dlv
186 311 dlv
187 311 dlv
62 373 dlv
62 374 dlv
0 373 dlv
-62 373 dlv
-62 374 dlv
-187 311 dlv
-186 311 dlv
-187 311 dlv
dle
12257 35465 dlt
249 311 dlv
124 373 dlv
125 373 dlv
124 436 dlv
0 373 dlv
0 374 dlv
-124 435 dlv
-125 373 dlv
-124 374 dlv
-249 311 dlv
dle
17857 37331 dlt
-312 374 dlv
-311 311 dlv
-373 311 dlv
-373 311 dlv
-374 186 dlv
-435 187 dlv
-498 187 dlv
-435 62 dlv
-436 62 dlv
-498 0 dlv
-435 -62 dlv
-498 -62 dlv
dle
36863 4044 dlt
237 622 dlv
237 -622 dlv
dle
296 0 36952 4251 dls
37515 4044 dlt
0 622 dlv
415 -622 dlv
0 622 dlv
dle
38167 4044 dlt
0 622 dlv
207 0 dlv
89 -30 dlv
59 -59 dlv
30 -59 dlv
30 -89 dlv
0 -148 dlv
-30 -89 dlv
-30 -59 dlv
-59 -60 dlv
-89 -29 dlv
-207 0 dlv
dle
38789 4518 dlt
0 29 dlv
30 60 dlv
29 29 dlv
59 30 dlv
119 0 dlv
59 -30 dlv
30 -29 dlv
29 -60 dlv
0 -59 dlv
-29 -59 dlv
-59 -89 dlv
-297 -296 dlv
415 0 dlv
dle
59157 11510 dlt
-59 -30 dlv
-60 -59 dlv
-29 -59 dlv
-30 -89 dlv
0 -148 dlv
30 -89 dlv
29 -59 dlv
60 -59 dlv
59 -30 dlv
118 0 dlv
60 30 dlv
59 59 dlv
30 59 dlv
29 89 dlv
0 148 dlv
-29 89 dlv
-30 59 dlv
-59 59 dlv
-60 30 dlv
-118 0 dlv
dle
59661 10888 dlt
0 622 dlv
266 0 dlv
89 -30 dlv
30 -29 dlv
29 -59 dlv
0 -60 dlv
-29 -59 dlv
-30 -30 dlv
-89 -29 dlv
-266 0 dlv
dle
207 -326 59868 11214 dls
60283 11362 dlt
0 30 dlv
29 59 dlv
30 29 dlv
59 30 dlv
119 0 dlv
59 -30 dlv
30 -29 dlv
29 -59 dlv
0 -60 dlv
-29 -59 dlv
-60 -89 dlv
-296 -296 dlv
415 0 dlv
dle
36863 17110 dlt
237 622 dlv
237 -622 dlv
dle
296 0 36952 17317 dls
37515 17110 dlt
0 622 dlv
415 -622 dlv
0 622 dlv
dle
38167 17110 dlt
0 622 dlv
207 0 dlv
89 -30 dlv
59 -59 dlv
30 -59 dlv
30 -89 dlv
0 -148 dlv
-30 -89 dlv
-30 -59 dlv
-59 -59 dlv
-89 -30 dlv
-207 0 dlv
dle
38789 17584 dlt
0 30 dlv
30 59 dlv
29 29 dlv
59 30 dlv
119 0 dlv
59 -30 dlv
30 -29 dlv
29 -59 dlv
0 -60 dlv
-29 -59 dlv
-59 -89 dlv
-297 -296 dlv
415 0 dlv
dle
414 -623 31603 32043 dls
-414 -623 32017 32043 dls
32373 32043 dlt
-59 -30 dlv
-60 -59 dlv
-29 -60 dlv
-30 -88 dlv
0 -149 dlv
30 -88 dlv
29 -60 dlv
60 -59 dlv
59 -30 dlv
118 0 dlv
60 30 dlv
59 59 dlv
30 60 dlv
29 88 dlv
0 149 dlv
-29 88 dlv
-30 60 dlv
-59 59 dlv
-60 30 dlv
-118 0 dlv
dle
32877 31420 dlt
0 623 dlv
266 0 dlv
89 -30 dlv
30 -30 dlv
29 -59 dlv
0 -59 dlv
-29 -59 dlv
-30 -30 dlv
-89 -30 dlv
-266 0 dlv
dle
207 -326 33084 31746 dls
414 -622 15426 37642 dls
-414 -622 15840 37642 dls
16196 37642 dlt
-59 -29 dlv
-60 -60 dlv
-29 -59 dlv
-30 -89 dlv
0 -148 dlv
30 -89 dlv
29 -59 dlv
60 -59 dlv
59 -30 dlv
118 0 dlv
60 30 dlv
59 59 dlv
29 59 dlv
30 89 dlv
0 148 dlv
-30 89 dlv
-29 59 dlv
-59 60 dlv
-60 29 dlv
-118 0 dlv
dle
16700 37020 dlt
0 622 dlv
266 0 dlv
89 -29 dlv
30 -30 dlv
29 -59 dlv
0 -59 dlv
-29 -60 dlv
-30 -29 dlv
-89 -30 dlv
-266 0 dlv
dle
207 -326 16907 37346 dls
3111 0 2924 36709 dls
0 31732 6035 4977 dls
6346 36709 dpb
6346 36833 dpv
6284 36958 dpv
6159 37020 dpv
6035 37020 dpv
5910 37020 dpv
5786 36958 dpv
5724 36833 dpv
5724 36709 dpv
5724 36585 dpv
5786 36460 dpv
5910 36398 dpv
6035 36398 dpv
6159 36398 dpv
6284 36460 dpv
6346 36585 dpv
dps
4977 0 2924 37953 dls
0 34843 7901 3110 dls
8212 37953 dpb
8212 38078 dpv
8150 38202 dpv
8026 38265 dpv
7901 38265 dpv
7777 38265 dpv
7653 38202 dpv
7590 38078 dpv
7590 37953 dpv
7590 37829 dpv
7653 37705 dpv
7777 37642 dpv
7901 37642 dpv
8026 37642 dpv
8150 37705 dpv
8212 37829 dpv
dps
3733 0 6035 36709 dls
1867 0 7901 37953 dls
1867 0 20345 37331 dls
0 16177 22212 16177 dls
0 4977 22212 32354 dls
22523 32354 dpb
22523 32478 dpv
22461 32603 dpv
22336 32665 dpv
22212 32665 dpv
22087 32665 dpv
21963 32603 dpv
21901 32478 dpv
21901 32354 dpv
21901 32229 dpv
21963 32105 dpv
22087 32043 dpv
22212 32043 dpv
22336 32043 dpv
22461 32105 dpv
22523 32229 dpv
dps
22399 0 3546 24887 dls
3733 0 22212 32354 dls
0 6844 25945 18043 dls
0 6222 25945 24887 dls
26256 24887 dpb
26256 25012 dpv
26194 25136 dpv
26069 25198 dpv
25945 25198 dpv
25821 25198 dpv
25696 25136 dpv
25634 25012 dpv
25634 24887 dpv
25634 24763 dpv
25696 24638 dpv
25821 24576 dpv
25945 24576 dpv
26069 24576 dpv
26194 24638 dpv
26256 24763 dpv
dps
25510 0 6035 4977 dls
23644 0 7901 3110 dls
9333 0 22212 16177 dls
5600 0 25945 18043 dls
5600 0 44611 3733 dls
5600 0 44611 16799 dls
0 6222 50211 3733 dls
0 4978 50211 11821 dls
4977 0 50211 9955 dls
4977 0 50211 11821 dls
27377 0 36522 31731 dls
3733 0 64521 11199 dls
70343 11362 dlt
-30 59 dlv
-59 59 dlv
-59 30 dlv
-119 0 dlv
-59 -30 dlv
-59 -59 dlv
-30 -59 dlv
-29 -89 dlv
0 -148 dlv
29 -89 dlv
30 -59 dlv
59 -59 dlv
59 -30 dlv
119 0 dlv
59 30 dlv
59 59 dlv
30 59 dlv
dle
70669 11303 dlt
-59 -30 dlv
-59 -59 dlv
-30 -89 dlv
0 -59 dlv
30 -89 dlv
59 -59 dlv
59 -30 dlv
89 0 dlv
59 30 dlv
59 59 dlv
30 89 dlv
0 59 dlv
-30 89 dlv
-59 59 dlv
-59 30 dlv
-89 0 dlv
dle
71113 11303 dlt
0 -297 dlv
30 -88 dlv
59 -30 dlv
89 0 dlv
59 30 dlv
89 88 dlv
dle
0 -415 71439 11303 dls
71706 11510 dlt
0 -504 dlv
30 -88 dlv
59 -30 dlv
59 0 dlv
dle
208 0 71617 11303 dls
719 25035 dlt
-29 60 dlv
-59 59 dlv
-60 30 dlv
-118 0 dlv
-59 -30 dlv
-60 -59 dlv
-29 -60 dlv
-30 -88 dlv
0 -149 dlv
30 -88 dlv
29 -60 dlv
60 -59 dlv
59 -30 dlv
118 0 dlv
60 30 dlv
59 59 dlv
29 60 dlv
dle
897 25184 dlt
30 -30 dlv
29 30 dlv
-29 29 dlv
-30 -29 dlv
dle
0 -415 927 24976 dls
0 -415 1164 24976 dls
1164 24858 dlt
89 89 dlv
59 29 dlv
89 0 dlv
59 -29 dlv
30 -89 dlv
0 -297 dlv
dle
65721 32043 dlt
-59 -30 dlv
-59 -59 dlv
-30 -60 dlv
-30 -88 dlv
0 -149 dlv
30 -88 dlv
30 -60 dlv
59 -59 dlv
59 -30 dlv
119 0 dlv
59 30 dlv
59 59 dlv
30 60 dlv
29 88 dlv
0 149 dlv
-29 88 dlv
-30 60 dlv
-59 59 dlv
-59 30 dlv
-119 0 dlv
dle
66225 32043 dlt
0 -445 dlv
29 -89 dlv
60 -59 dlv
89 -30 dlv
59 0 dlv
89 30 dlv
59 59 dlv
30 89 dlv
0 445 dlv
dle
0 -623 66995 32043 dls
415 0 66788 32043 dls
1114 36724 dlt
266 0 dlv
89 -30 dlv
30 -29 dlv
29 -60 dlv
0 -89 dlv
-29 -59 dlv
-30 -29 dlv
-89 -30 dlv
-266 0 dlv
0 622 dlv
266 0 dlv
89 -30 dlv
30 -29 dlv
29 -59 dlv
0 -60 dlv
-29 -59 dlv
-30 -30 dlv
-89 -29 dlv
dle
1087 37642 dlt
237 623 dlv
237 -623 dlv
dle
296 0 1176 37850 dls
31948 5288 dlt
237 622 dlv
237 -622 dlv
dle
296 0 32037 5496 dls
32037 3747 dlt
266 0 dlv
89 -29 dlv
30 -30 dlv
29 -59 dlv
0 -89 dlv
-29 -59 dlv
-30 -30 dlv
-89 -29 dlv
-266 0 dlv
0 622 dlv
266 0 dlv
89 -30 dlv
30 -29 dlv
29 -60 dlv
0 -59 dlv
-29 -59 dlv
-30 -30 dlv
-89 -30 dlv
dle
42887 4666 dlt
-60 -30 dlv
-59 -59 dlv
-30 -59 dlv
-29 -89 dlv
0 -148 dlv
29 -89 dlv
30 -59 dlv
59 -60 dlv
60 -29 dlv
118 0 dlv
59 29 dlv
60 60 dlv
29 59 dlv
30 89 dlv
0 148 dlv
-30 89 dlv
-29 59 dlv
-60 59 dlv
-59 30 dlv
-118 0 dlv
dle
43390 4459 dlt
0 -297 dlv
30 -89 dlv
59 -29 dlv
89 0 dlv
59 29 dlv
89 89 dlv
dle
0 -415 43716 4459 dls
43983 4666 dlt
0 -504 dlv
29 -89 dlv
60 -29 dlv
59 0 dlv
dle
207 0 43894 4459 dls
55591 12132 dlt
237 623 dlv
237 -623 dlv
dle
296 0 55680 12340 dls
56302 10592 dlt
267 0 dlv
89 -30 dlv
29 -30 dlv
30 -59 dlv
0 -89 dlv
-30 -59 dlv
-29 -30 dlv
-89 -29 dlv
-267 0 dlv
0 622 dlv
267 0 dlv
89 -30 dlv
29 -29 dlv
30 -60 dlv
0 -59 dlv
-30 -59 dlv
-29 -30 dlv
-89 -29 dlv
dle
62548 12132 dlt
-59 -29 dlv
-60 -60 dlv
-29 -59 dlv
-30 -89 dlv
0 -148 dlv
30 -89 dlv
29 -59 dlv
60 -59 dlv
59 -30 dlv
118 0 dlv
60 30 dlv
59 59 dlv
30 59 dlv
29 89 dlv
0 148 dlv
-29 89 dlv
-30 59 dlv
-59 60 dlv
-60 29 dlv
-118 0 dlv
dle
63052 12132 dlt
0 -444 dlv
29 -89 dlv
59 -59 dlv
89 -30 dlv
60 0 dlv
89 30 dlv
59 59 dlv
29 89 dlv
0 444 dlv
dle
0 -622 63822 12132 dls
414 0 63615 12132 dls
31948 18354 dlt
237 622 dlv
237 -622 dlv
dle
296 0 32037 18562 dls
32037 16814 dlt
266 0 dlv
89 -30 dlv
30 -30 dlv
29 -59 dlv
0 -89 dlv
-29 -59 dlv
-30 -30 dlv
-89 -29 dlv
-266 0 dlv
0 622 dlv
266 0 dlv
89 -30 dlv
30 -29 dlv
29 -60 dlv
0 -59 dlv
-29 -59 dlv
-30 -30 dlv
-89 -29 dlv
dle
42887 17732 dlt
-60 -30 dlv
-59 -59 dlv
-30 -59 dlv
-29 -89 dlv
0 -148 dlv
29 -89 dlv
30 -59 dlv
59 -59 dlv
60 -30 dlv
118 0 dlv
59 30 dlv
60 59 dlv
29 59 dlv
30 89 dlv
0 148 dlv
-30 89 dlv
-29 59 dlv
-60 59 dlv
-59 30 dlv
-118 0 dlv
dle
43390 17525 dlt
0 -297 dlv
30 -88 dlv
59 -30 dlv
89 0 dlv
59 30 dlv
89 88 dlv
dle
0 -415 43716 17525 dls
43983 17732 dlt
0 -504 dlv
29 -88 dlv
60 -30 dlv
59 0 dlv
dle
207 0 43894 17525 dls
27592 32665 dlt
237 622 dlv
237 -622 dlv
dle
297 0 27681 32872 dls
27681 31746 dlt
267 0 dlv
89 -29 dlv
29 -30 dlv
30 -59 dlv
0 -89 dlv
-30 -59 dlv
-29 -30 dlv
-89 -30 dlv
-267 0 dlv
0 623 dlv
267 0 dlv
89 -30 dlv
29 -30 dlv
30 -59 dlv
0 -59 dlv
-30 -59 dlv
-29 -30 dlv
-89 -30 dlv
dle
34549 32665 dlt
-59 -30 dlv
-59 -59 dlv
-30 -59 dlv
-30 -89 dlv
0 -148 dlv
30 -89 dlv
30 -60 dlv
59 -59 dlv
59 -29 dlv
119 0 dlv
59 29 dlv
59 59 dlv
30 60 dlv
29 89 dlv
0 148 dlv
-29 89 dlv
-30 59 dlv
-59 59 dlv
-59 30 dlv
-119 0 dlv
dle
35053 32665 dlt
0 -445 dlv
29 -89 dlv
60 -59 dlv
89 -29 dlv
59 0 dlv
89 29 dlv
59 59 dlv
30 89 dlv
0 445 dlv
dle
0 -622 35823 32665 dls
415 0 35616 32665 dls
11415 38265 dlt
237 622 dlv
237 -622 dlv
dle
296 0 11504 38472 dls
11504 37346 dlt
267 0 dlv
89 -30 dlv
29 -29 dlv
30 -59 dlv
0 -89 dlv
-30 -60 dlv
-29 -29 dlv
-89 -30 dlv
-267 0 dlv
0 622 dlv
267 0 dlv
89 -29 dlv
29 -30 dlv
30 -59 dlv
0 -59 dlv
-30 -60 dlv
-29 -29 dlv
-89 -30 dlv
dle
18372 38265 dlt
-59 -30 dlv
-59 -59 dlv
-30 -60 dlv
-30 -89 dlv
0 -148 dlv
30 -89 dlv
30 -59 dlv
59 -59 dlv
59 -30 dlv
119 0 dlv
59 30 dlv
59 59 dlv
30 59 dlv
29 89 dlv
0 148 dlv
-29 89 dlv
-30 60 dlv
-59 59 dlv
-59 30 dlv
-119 0 dlv
dle
18876 38265 dlt
0 -445 dlv
29 -89 dlv
60 -59 dlv
88 -30 dlv
60 0 dlv
89 30 dlv
59 59 dlv
30 89 dlv
0 445 dlv
dle
0 -623 19646 38265 dls
414 0 19439 38265 dls
31296 4728 31794 5226 dbs
31296 2862 31794 3359 dbs
44362 3484 44860 3982 dbs
68254 10639 dpb
68254 11759 dpv
68939 11759 dpv
69499 11199 dpv
68939 10639 dpv
dps
54939 11572 55437 12070 dbs
54939 9706 55437 10204 dbs
64272 10950 64770 11448 dbs
31296 17794 31794 18292 dbs
31296 15928 31794 16425 dbs
44362 16550 44860 17048 dbs
2302 24327 dpb
2302 25447 dpv
2986 25447 dpv
3546 24887 dpv
2986 24327 dpv
dps
63899 31171 dpb
63899 32291 dpv
64583 32291 dpv
65143 31731 dpv
64583 31171 dpv
dps
25696 32105 26194 32603 dbs
25696 30860 26194 31358 dbs
36273 31483 36771 31980 dbs
2302 36149 dpb
2302 37269 dpv
2986 37269 dpv
3546 36709 dpv
2986 36149 dpv
dps
2302 37393 dpb
2302 38513 dpv
2986 38513 dpv
3546 37953 dpv
2986 37393 dpv
dps
9519 37705 10017 38202 dbs
9519 36460 10017 36958 dbs
20096 37082 20594 37580 dbs
0 0 71988 39827 clwin
gfs
%%Trailer
%%EOF
