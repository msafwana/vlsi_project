%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 2168 1332
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%%DocumentFonts:Courier
%******************************************************************************
%
% The preview image should preceed this file if a preview is being generated.
%
% This should be the first line: %!PS-Adobe-2.0 EPSF-1.2
% There should also be a BBox:   %%BoundingBox:0 0 300 300
%
% Cadence Design Systems -- Supports Both Level 1 and Level 2 Printers
%
% EPS Prologue -- Version 97B (aka 9702)
%
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
/gis  {
  0 setgray
  mark
  save
  newpath

  72 resolution div
  dup
  scale

  /stippleArray 10 array def
    stippleArray
     dup    0  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
	        08080404020201018080404020201010> put
	    9  <08081414222241418080414122221414
		08081414222241418080414122221414> put



  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
     /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put

    /BuildChar {
        /char exch def
        /fontdict exch def
	/charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 6 dict def
  xformdict /xformmtrx matrix put

  /rt 0 def
  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet 0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

  gsave

  } def

/cdsLevel2 /languagelevel where {pop languagelevel} {1} ifelse 2 ge def

/cdsColor cdsLevel2 not {
                          false
                          /colorimage where {pop pop true} if
                        } {
	                  true
                        } ifelse
def

/gfs  {
    grestore
    showpage
    restore
    cleartomark
  } def
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def

  } bind def
/rotp  {
  /rt 90 def
  grestore
} def
/clwin  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    rt 90 eq
      {
        pageWidth 0 translate
        rt rotate
	/rt 0 def
	gsave
      } if

    grestore
    gsave
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
    newpath
} def
/bblineto {
  dup dup   /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} def
/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} def
/ellipse
  { ellipsedict begin
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    /savematrix mtrx currentmatrix def
    x y translate
    xrad yrad scale
    0 0 1 startangle endangle arc
    savematrix setmatrix
    end
  } def
/dls  {
  gsave
  newpath
  moveto
  rlineto
  setLineColor
  stroke
  grestore
} def
/dlt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dslt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dlv  {
  rlineto
} def
/dle  {
  stroke
  grestore
} def
/mps {
  newpath
  moveto
} def
/dbu  {
    setLineColor
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } def
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave
      newpath
      x1 y1 bbmoveto
      x2 y1 bblineto
      x2 y2 bblineto
      x1 y2 bblineto
      closepath
      clip fillpath
    grestore
  } def

/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
      newpath
      x1 y1 moveto
      x2 y1 lineto
      x2 y2 lineto
      x1 y2 lineto
      closepath
      gsave
      setFillColor
      fill grestore
      setLineColor stroke

} def
/dpb { gsave
      newpath bbmoveto
} def
/dpu  {
        closepath
        setLineColor
        stroke
      grestore
} def
/dpf  {
       closepath
       clip fillpath
     grestore
} def
/dps  {
       closepath
       setFillColor
       fill grestore
       setLineColor stroke
} def
/dpv  {
    bblineto
} def
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setLineColor
      stroke
    grestore
} def
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def
    gsave
      newpath
      x y radius radius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setFillColor
      fill
    grestore
    setLineColor stroke
  } def
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
      x y xradius yradius 0 360 ellipse
      gsave
      setFillColor
      stroke
    grestore
  } def
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      setFillColor fill
    grestore
    setLineColor stroke
} def
/dau  { gsave
          newpath ellipse
          setLineColor
          stroke
        grestore
} def
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
} def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
} def

/lpon  {
    /oncount exch def
    pop
    oncount
} def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
} def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth setlinewidth
} def

/sls    { pop } def

/ssls  { [] 0 setdash
          1 setlinewidth
} def
/fillpath  {
    setFillColor
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop
    hatchSet 1 eq {setLineColor stroke} if
} def

/fds  { pop /currchar 30 def} def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } def
/fde  {
    pop
  } def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } def

  /setLineColor {
    cdsLevel2 cdsColor or {
      lineRed    1000 div
      lineGreen  1000 div
      lineBlue   1000 div
      setrgbcolor } if
  } def

  /setFillColor {
    cdsLevel2 cdsColor or {
      fillRed    1000 div
      fillGreen  1000 div
      fillBlue   1000 div
      setrgbcolor }
      { 0 setgray } ifelse
  } def

  /slc {
    /lineBlue  exch def
    /lineGreen exch def
    /lineRed   exch def
    /color 1 def
    lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
      /lineBlue  0 def
      /lineGreen 0 def
      /lineRed   0 def
    } if} if} if
  } def

  /sfc {
    /fillBlue  exch def
    /fillGreen exch def
    /fillRed   exch def
    /color 1 def
    fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
      /fillBlue  0 def
      /fillGreen 0 def
      /fillRed   0 def
    } if} if} if
  } def

%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%*****************************
%
% End of Cadence eps.prologue
%
%*****************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
 72000 72000 2400 pap
%%Page: cds 1
gis
0 9580 71997 34812 clwin
209 0 71790 44372 clwin
0 0 71965 44394 clwin
0 0 71965 44394 clwin
ssls
44394 70096 934 0 dbu
29863 17245 dlt
-557 0 dlv
0 -2225 dlv
557 0 dlv
dle
0 -2225 29417 17245 dls
32088 16578 dlt
-111 222 dlv
-223 112 dlv
-334 0 dlv
-222 -112 dlv
-112 -111 dlv
-111 -334 dlv
0 -334 dlv
111 -222 dlv
223 -111 dlv
334 0 dlv
222 111 dlv
112 222 dlv
dle
31420 16912 dlt
-222 -223 dlv
-112 -334 dlv
0 -334 dlv
112 -222 dlv
111 -111 dlv
dle
32088 16912 dlt
-111 -891 dlv
0 -222 dlv
222 -111 dlv
223 0 dlv
222 222 dlv
111 334 dlv
0 222 dlv
-111 334 dlv
-111 223 dlv
-223 222 dlv
-222 112 dlv
-334 111 dlv
-334 0 dlv
-334 -111 dlv
-222 -112 dlv
-223 -222 dlv
-111 -223 dlv
-111 -334 dlv
0 -333 dlv
111 -334 dlv
111 -223 dlv
223 -222 dlv
222 -111 dlv
334 -112 dlv
334 0 dlv
334 112 dlv
222 111 dlv
112 111 dlv
dle
32199 16912 dlt
-111 -891 dlv
0 -222 dlv
111 -111 dlv
dle
33423 17468 dlt
111 -111 dlv
111 111 dlv
-111 111 dlv
-111 -111 dlv
dle
0 -1558 33534 16689 dls
0 -1558 34424 16689 dls
34424 16244 dlt
334 334 dlv
223 111 dlv
333 0 dlv
223 -111 dlv
111 -334 dlv
0 -1113 dlv
dle
37651 16355 dlt
-111 223 dlv
-334 111 dlv
-334 0 dlv
-334 -111 dlv
-111 -223 dlv
111 -222 dlv
223 -112 dlv
556 -111 dlv
223 -111 dlv
111 -223 dlv
0 -111 dlv
-111 -222 dlv
-334 -112 dlv
-334 0 dlv
-334 112 dlv
-111 222 dlv
dle
38541 17468 dlt
0 -1892 dlv
111 -333 dlv
223 -112 dlv
222 0 dlv
dle
779 0 38207 16689 dls
0 -1558 40989 16689 dls
40989 16355 dlt
-223 223 dlv
-222 111 dlv
-334 0 dlv
-223 -111 dlv
-222 -223 dlv
-111 -334 dlv
0 -222 dlv
111 -334 dlv
222 -222 dlv
223 -112 dlv
334 0 dlv
222 112 dlv
223 222 dlv
dle
0 -1558 41879 16689 dls
41879 16244 dlt
334 334 dlv
222 111 dlv
334 0 dlv
223 -111 dlv
111 -334 dlv
0 -1113 dlv
dle
45217 16355 dlt
-223 223 dlv
-222 111 dlv
-334 0 dlv
-223 -111 dlv
-222 -223 dlv
-111 -334 dlv
0 -222 dlv
111 -334 dlv
222 -222 dlv
223 -112 dlv
334 0 dlv
222 112 dlv
223 222 dlv
dle
45884 16021 dlt
1336 0 dlv
0 223 dlv
-112 222 dlv
-111 112 dlv
-222 111 dlv
-334 0 dlv
-223 -111 dlv
-222 -223 dlv
-112 -334 dlv
0 -222 dlv
112 -334 dlv
222 -222 dlv
223 -112 dlv
334 0 dlv
222 112 dlv
223 222 dlv
dle
47998 15131 dlt
0 2337 dlv
1558 -2337 dlv
0 2337 dlv
dle
0 -1558 51670 16689 dls
51670 16355 dlt
-222 223 dlv
-223 111 dlv
-334 0 dlv
-222 -111 dlv
-223 -223 dlv
-111 -334 dlv
0 -222 dlv
111 -334 dlv
223 -222 dlv
222 -112 dlv
334 0 dlv
223 112 dlv
222 222 dlv
dle
0 -1558 52560 16689 dls
52560 16244 dlt
334 334 dlv
223 111 dlv
333 0 dlv
223 -111 dlv
111 -334 dlv
0 -1113 dlv
dle
53784 16244 dlt
334 334 dlv
222 111 dlv
334 0 dlv
223 -111 dlv
111 -334 dlv
0 -1113 dlv
dle
55787 16021 dlt
1335 0 dlv
0 223 dlv
-111 222 dlv
-112 112 dlv
-222 111 dlv
-334 0 dlv
-222 -111 dlv
-223 -223 dlv
-111 -334 dlv
0 -222 dlv
111 -334 dlv
223 -222 dlv
222 -112 dlv
334 0 dlv
222 112 dlv
223 222 dlv
dle
0 -2225 58123 17245 dls
57678 17245 dlt
557 0 dlv
0 -2225 dlv
-557 0 dlv
dle
44394 49067 10280 0 dbu
11683 0 59347 39720 dls
-11683 0 71030 35047 dls
9346 0 934 30374 dls
9346 0 934 35047 dls
9346 0 934 39720 dls
24489 21974 dlt
-557 0 dlv
0 -2225 dlv
557 0 dlv
dle
0 -2225 24043 21974 dls
26714 21306 dlt
-111 223 dlv
-223 111 dlv
-334 0 dlv
-222 -111 dlv
-112 -111 dlv
-111 -334 dlv
0 -334 dlv
111 -222 dlv
223 -112 dlv
334 0 dlv
222 112 dlv
112 222 dlv
dle
26046 21640 dlt
-222 -222 dlv
-112 -334 dlv
0 -334 dlv
112 -222 dlv
111 -112 dlv
dle
26714 21640 dlt
-111 -890 dlv
0 -222 dlv
222 -112 dlv
223 0 dlv
222 223 dlv
111 334 dlv
0 222 dlv
-111 334 dlv
-111 222 dlv
-223 223 dlv
-222 111 dlv
-334 112 dlv
-334 0 dlv
-334 -112 dlv
-222 -111 dlv
-223 -223 dlv
-111 -222 dlv
-111 -334 dlv
0 -334 dlv
111 -333 dlv
111 -223 dlv
223 -222 dlv
222 -112 dlv
334 -111 dlv
334 0 dlv
334 111 dlv
222 112 dlv
112 111 dlv
dle
26825 21640 dlt
-111 -890 dlv
0 -222 dlv
111 -112 dlv
dle
0 -2337 28160 21418 dls
28160 21084 dlt
223 222 dlv
222 112 dlv
334 0 dlv
223 -112 dlv
222 -222 dlv
111 -334 dlv
0 -222 dlv
-111 -334 dlv
-222 -223 dlv
-223 -111 dlv
-334 0 dlv
-222 111 dlv
-223 223 dlv
dle
0 -1558 31498 21418 dls
31498 21084 dlt
-222 222 dlv
-223 112 dlv
-334 0 dlv
-222 -112 dlv
-223 -222 dlv
-111 -334 dlv
0 -222 dlv
111 -334 dlv
223 -223 dlv
222 -111 dlv
334 0 dlv
223 111 dlv
222 223 dlv
dle
0 -1558 32388 21418 dls
32388 20750 dlt
111 334 dlv
223 222 dlv
223 112 dlv
333 0 dlv
dle
33946 22197 dlt
0 -1892 dlv
111 -334 dlv
223 -111 dlv
222 0 dlv
dle
779 0 33612 21418 dls
35170 19860 dlt
0 2337 dlv
1557 -2337 dlv
0 2337 dlv
dle
0 -1558 38841 21418 dls
38841 21084 dlt
-222 222 dlv
-223 112 dlv
-333 0 dlv
-223 -112 dlv
-222 -222 dlv
-112 -334 dlv
0 -222 dlv
112 -334 dlv
222 -223 dlv
223 -111 dlv
333 0 dlv
223 111 dlv
222 223 dlv
dle
0 -1558 39732 21418 dls
39732 20973 dlt
333 333 dlv
223 112 dlv
334 0 dlv
222 -112 dlv
111 -333 dlv
0 -1113 dlv
dle
40955 20973 dlt
334 333 dlv
223 112 dlv
334 0 dlv
222 -112 dlv
111 -333 dlv
0 -1113 dlv
dle
42958 20750 dlt
1335 0 dlv
0 223 dlv
-111 222 dlv
-111 111 dlv
-223 112 dlv
-333 0 dlv
-223 -112 dlv
-223 -222 dlv
-111 -334 dlv
0 -222 dlv
111 -334 dlv
223 -223 dlv
223 -111 dlv
333 0 dlv
223 111 dlv
222 223 dlv
dle
0 -2225 45295 21974 dls
44850 21974 dlt
556 0 dlv
0 -2225 dlv
-556 0 dlv
dle
41189 40889 dlt
-222 -112 dlv
-223 -222 dlv
-111 -223 dlv
-111 -333 dlv
0 -557 dlv
111 -333 dlv
111 -223 dlv
223 -223 dlv
222 -111 dlv
445 0 dlv
223 111 dlv
222 223 dlv
111 223 dlv
112 333 dlv
0 557 dlv
-112 333 dlv
-111 223 dlv
-222 222 dlv
-223 112 dlv
-445 0 dlv
dle
43081 40889 dlt
0 -1669 dlv
111 -334 dlv
222 -223 dlv
334 -111 dlv
223 0 dlv
333 111 dlv
223 223 dlv
111 334 dlv
0 1669 dlv
dle
0 -2337 45973 40889 dls
1557 0 45195 40889 dls
49089 40555 dlt
-1780 -1001 dlv
1780 -1002 dlv
dle
49868 40889 dlt
1557 0 dlv
-1112 -2337 dlv
dle
52315 40110 dlt
-111 -111 dlv
111 -112 dlv
112 112 dlv
-112 111 dlv
dle
52315 38775 dlt
-111 -112 dlv
111 -111 dlv
112 111 dlv
-112 112 dlv
dle
53873 40889 dlt
-334 -112 dlv
-222 -333 dlv
-111 -557 dlv
0 -333 dlv
111 -557 dlv
222 -334 dlv
334 -111 dlv
223 0 dlv
333 111 dlv
223 334 dlv
111 557 dlv
0 333 dlv
-111 557 dlv
-223 333 dlv
-333 112 dlv
-223 0 dlv
dle
-1557 -2337 54763 40889 dls
55542 40555 dlt
1780 -1001 dlv
-1780 -1002 dlv
dle
51770 35659 dlt
-111 223 dlv
-223 222 dlv
-222 112 dlv
-445 0 dlv
-223 -112 dlv
-222 -222 dlv
-111 -223 dlv
-112 -333 dlv
0 -557 dlv
112 -334 dlv
111 -222 dlv
222 -223 dlv
223 -111 dlv
445 0 dlv
222 111 dlv
223 223 dlv
111 222 dlv
dle
52994 35437 dlt
-222 -111 dlv
-223 -223 dlv
-111 -334 dlv
0 -222 dlv
111 -334 dlv
223 -223 dlv
222 -111 dlv
334 0 dlv
222 111 dlv
223 223 dlv
111 334 dlv
0 222 dlv
-111 334 dlv
-223 223 dlv
-222 111 dlv
-334 0 dlv
dle
54663 35437 dlt
0 -1113 dlv
111 -334 dlv
223 -111 dlv
334 0 dlv
222 111 dlv
334 334 dlv
dle
0 -1558 55887 35437 dls
56888 36216 dlt
0 -1892 dlv
112 -334 dlv
222 -111 dlv
223 0 dlv
dle
778 0 56555 35437 dls
13685 30931 dlt
-111 222 dlv
-223 223 dlv
-222 111 dlv
-445 0 dlv
-223 -111 dlv
-223 -223 dlv
-111 -222 dlv
-111 -334 dlv
0 -556 dlv
111 -334 dlv
111 -223 dlv
223 -222 dlv
223 -112 dlv
445 0 dlv
222 112 dlv
223 222 dlv
111 223 dlv
dle
14352 31487 dlt
112 -111 dlv
111 111 dlv
-111 111 dlv
-112 -111 dlv
dle
0 -1558 14464 30708 dls
0 -1558 15354 30708 dls
15354 30263 dlt
334 334 dlv
222 111 dlv
334 0 dlv
222 -111 dlv
112 -334 dlv
0 -1113 dlv
dle
12127 35103 dlt
1002 0 dlv
333 -111 dlv
112 -111 dlv
111 -223 dlv
0 -334 dlv
-111 -222 dlv
-112 -112 dlv
-333 -111 dlv
-1002 0 dlv
0 2337 dlv
1002 0 dlv
333 -112 dlv
112 -111 dlv
111 -222 dlv
0 -223 dlv
-111 -222 dlv
-112 -112 dlv
-333 -111 dlv
dle
16244 35882 dlt
-1780 -1001 dlv
1780 -1002 dlv
dle
17023 36216 dlt
1557 0 dlv
-1112 -2337 dlv
dle
19471 35437 dlt
-112 -111 dlv
112 -112 dlv
111 112 dlv
-111 111 dlv
dle
19471 34102 dlt
-112 -112 dlv
112 -111 dlv
111 111 dlv
-111 112 dlv
dle
21028 36216 dlt
-334 -112 dlv
-222 -333 dlv
-111 -557 dlv
0 -333 dlv
111 -557 dlv
222 -334 dlv
334 -111 dlv
223 0 dlv
334 111 dlv
222 334 dlv
111 557 dlv
0 333 dlv
-111 557 dlv
-222 333 dlv
-334 112 dlv
-223 0 dlv
dle
-1557 -2337 21918 36216 dls
22697 35882 dlt
1780 -1001 dlv
-1780 -1002 dlv
dle
11793 38552 dlt
891 2337 dlv
890 -2337 dlv
dle
1113 0 12127 39331 dls
16021 40555 dlt
-1780 -1001 dlv
1780 -1002 dlv
dle
16800 40889 dlt
1558 0 dlv
-1113 -2337 dlv
dle
19248 40110 dlt
-111 -111 dlv
111 -112 dlv
111 112 dlv
-111 111 dlv
dle
19248 38775 dlt
-111 -112 dlv
111 -111 dlv
111 111 dlv
-111 112 dlv
dle
20806 40889 dlt
-334 -112 dlv
-223 -333 dlv
-111 -557 dlv
0 -333 dlv
111 -557 dlv
223 -334 dlv
334 -111 dlv
222 0 dlv
334 111 dlv
223 334 dlv
111 557 dlv
0 333 dlv
-111 557 dlv
-223 333 dlv
-334 112 dlv
-222 0 dlv
dle
-1558 -2337 21696 40889 dls
22475 40555 dlt
1780 -1001 dlv
-1780 -1002 dlv
dle
70095 34113 71965 35982 dbs
70095 38786 71965 40655 dbs
0 38786 1869 40655 dbs
0 34113 1869 35982 dbs
0 29440 1869 31309 dbs
0 0 72000 44394 clwin
gfs
%%Trailer
%%EOF
