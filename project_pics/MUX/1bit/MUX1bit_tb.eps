%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 2168 1171
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%%DocumentFonts:Courier
%******************************************************************************
%
% The preview image should preceed this file if a preview is being generated.
%
% This should be the first line: %!PS-Adobe-2.0 EPSF-1.2
% There should also be a BBox:   %%BoundingBox:0 0 300 300
%
% Cadence Design Systems -- Supports Both Level 1 and Level 2 Printers
%
% EPS Prologue -- Version 97B (aka 9702)
%
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
/gis  {
  0 setgray
  mark
  save
  newpath

  72 resolution div
  dup
  scale

  /stippleArray 10 array def
    stippleArray
     dup    0  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
	        08080404020201018080404020201010> put
	    9  <08081414222241418080414122221414
		08081414222241418080414122221414> put



  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
     /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put

    /BuildChar {
        /char exch def
        /fontdict exch def
	/charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 6 dict def
  xformdict /xformmtrx matrix put

  /rt 0 def
  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet 0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

  gsave

  } def

/cdsLevel2 /languagelevel where {pop languagelevel} {1} ifelse 2 ge def

/cdsColor cdsLevel2 not {
                          false
                          /colorimage where {pop pop true} if
                        } {
	                  true
                        } ifelse
def

/gfs  {
    grestore
    showpage
    restore
    cleartomark
  } def
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def

  } bind def
/rotp  {
  /rt 90 def
  grestore
} def
/clwin  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    rt 90 eq
      {
        pageWidth 0 translate
        rt rotate
	/rt 0 def
	gsave
      } if

    grestore
    gsave
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
    newpath
} def
/bblineto {
  dup dup   /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} def
/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} def
/ellipse
  { ellipsedict begin
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    /savematrix mtrx currentmatrix def
    x y translate
    xrad yrad scale
    0 0 1 startangle endangle arc
    savematrix setmatrix
    end
  } def
/dls  {
  gsave
  newpath
  moveto
  rlineto
  setLineColor
  stroke
  grestore
} def
/dlt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dslt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dlv  {
  rlineto
} def
/dle  {
  stroke
  grestore
} def
/mps {
  newpath
  moveto
} def
/dbu  {
    setLineColor
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } def
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave
      newpath
      x1 y1 bbmoveto
      x2 y1 bblineto
      x2 y2 bblineto
      x1 y2 bblineto
      closepath
      clip fillpath
    grestore
  } def

/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
      newpath
      x1 y1 moveto
      x2 y1 lineto
      x2 y2 lineto
      x1 y2 lineto
      closepath
      gsave
      setFillColor
      fill grestore
      setLineColor stroke

} def
/dpb { gsave
      newpath bbmoveto
} def
/dpu  {
        closepath
        setLineColor
        stroke
      grestore
} def
/dpf  {
       closepath
       clip fillpath
     grestore
} def
/dps  {
       closepath
       setFillColor
       fill grestore
       setLineColor stroke
} def
/dpv  {
    bblineto
} def
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setLineColor
      stroke
    grestore
} def
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def
    gsave
      newpath
      x y radius radius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setFillColor
      fill
    grestore
    setLineColor stroke
  } def
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
      x y xradius yradius 0 360 ellipse
      gsave
      setFillColor
      stroke
    grestore
  } def
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      setFillColor fill
    grestore
    setLineColor stroke
} def
/dau  { gsave
          newpath ellipse
          setLineColor
          stroke
        grestore
} def
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
} def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
} def

/lpon  {
    /oncount exch def
    pop
    oncount
} def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
} def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth setlinewidth
} def

/sls    { pop } def

/ssls  { [] 0 setdash
          1 setlinewidth
} def
/fillpath  {
    setFillColor
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop
    hatchSet 1 eq {setLineColor stroke} if
} def

/fds  { pop /currchar 30 def} def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } def
/fde  {
    pop
  } def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } def

  /setLineColor {
    cdsLevel2 cdsColor or {
      lineRed    1000 div
      lineGreen  1000 div
      lineBlue   1000 div
      setrgbcolor } if
  } def

  /setFillColor {
    cdsLevel2 cdsColor or {
      fillRed    1000 div
      fillGreen  1000 div
      fillBlue   1000 div
      setrgbcolor }
      { 0 setgray } ifelse
  } def

  /slc {
    /lineBlue  exch def
    /lineGreen exch def
    /lineRed   exch def
    /color 1 def
    lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
      /lineBlue  0 def
      /lineGreen 0 def
      /lineRed   0 def
    } if} if} if
  } def

  /sfc {
    /fillBlue  exch def
    /fillGreen exch def
    /fillRed   exch def
    /color 1 def
    fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
      /fillBlue  0 def
      /fillGreen 0 def
      /fillRed   0 def
    } if} if} if
  } def

%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%*****************************
%
% End of Cadence eps.prologue
%
%*****************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
 72000 72000 2400 pap
%%Page: cds 1
gis
0 0 72000 38982 clwin
0 0 71913 39032 clwin
0 0 71913 39032 clwin
ssls
52487 11275 dlt
270 -630 dlv
271 630 dlv
dle
53298 11366 dlt
0 45 dlv
45 90 dlv
45 45 dlv
90 45 dlv
181 0 dlv
90 -45 dlv
45 -45 dlv
45 -90 dlv
0 -91 dlv
-45 -90 dlv
-90 -135 dlv
-451 -450 dlv
631 0 dlv
dle
811 0 54199 11185 dls
811 0 54199 10915 dls
55461 11411 dlt
90 45 dlv
135 135 dlv
0 -946 dlv
dle
22917 20738 dlt
271 -631 dlv
270 631 dlv
dle
23728 20828 dlt
0 45 dlv
46 90 dlv
45 45 dlv
90 45 dlv
180 0 dlv
90 -45 dlv
45 -45 dlv
45 -90 dlv
0 -90 dlv
-45 -90 dlv
-90 -136 dlv
-451 -450 dlv
631 0 dlv
dle
811 0 24630 20648 dls
811 0 24630 20377 dls
25891 20873 dlt
90 45 dlv
136 135 dlv
0 -946 dlv
dle
33563 20738 dlt
270 -631 dlv
270 631 dlv
dle
34374 20828 dlt
0 45 dlv
45 90 dlv
45 45 dlv
90 45 dlv
180 0 dlv
90 -45 dlv
45 -45 dlv
45 -90 dlv
0 -90 dlv
-45 -90 dlv
-90 -136 dlv
-450 -450 dlv
630 0 dlv
dle
811 0 35275 20648 dls
811 0 35275 20377 dls
36536 20873 dlt
90 45 dlv
136 135 dlv
0 -946 dlv
dle
51851 15139 dlt
360 -946 dlv
361 946 dlv
dle
52797 14914 dlt
0 45 dlv
45 90 dlv
45 45 dlv
90 45 dlv
180 0 dlv
90 -45 dlv
46 -45 dlv
45 -90 dlv
0 -90 dlv
-45 -90 dlv
-91 -135 dlv
-450 -451 dlv
631 0 dlv
dle
22281 24601 dlt
360 -946 dlv
361 946 dlv
dle
23452 24601 dlt
-135 -45 dlv
-90 -135 dlv
-45 -225 dlv
0 -135 dlv
45 -226 dlv
90 -135 dlv
135 -45 dlv
91 0 dlv
135 45 dlv
90 135 dlv
45 226 dlv
0 135 dlv
-45 225 dlv
-90 135 dlv
-135 45 dlv
-91 0 dlv
dle
-631 -946 23813 24601 dls
32926 24601 dlt
361 -946 dlv
360 946 dlv
dle
33962 24421 dlt
91 45 dlv
135 135 dlv
0 -946 dlv
dle
225 0 3424 19516 dls
0 -1183 3537 19516 dls
225 0 3424 18333 dls
4044 19516 dlt
619 0 dlv
-338 -451 dlv
169 0 dlv
113 -56 dlv
56 -57 dlv
56 -169 dlv
0 -112 dlv
-56 -169 dlv
-113 -113 dlv
-169 -56 dlv
-169 0 dlv
-168 56 dlv
-57 56 dlv
-56 113 dlv
dle
7097 0 36429 31935 dls
7097 0 36429 27204 dls
0 4731 50623 20107 dls
43526 21290 dlt
13011 5914 dlv
0 4731 dlv
-13011 5914 dlv
0 -16559 dlv
dle
-4731 0 61268 29569 dls
0 -4731 5677 5913 dls
5914 0 2720 1182 dls
0 -3548 26967 5913 dls
25784 2365 dpb
28150 2365 dpv
26967 1182 dpv
dpu
0 -3548 50623 5913 dls
49440 2365 dpb
51806 2365 dpv
50623 1182 dpv
dpu
46956 11473 dlt
355 0 dlv
0 709 dlv
473 0 dlv
0 -709 dlv
473 0 dlv
0 709 dlv
473 0 dlv
0 -709 dlv
355 0 dlv
dle
0 -2366 50623 10645 dls
0 2366 50623 13010 dls
0 710 50623 12064 dls
-710 0 50978 12419 dls
-710 0 50978 11236 dls
51924 11827 dpb
51924 12064 dpv
51806 12300 dpv
51687 12419 dpv
51569 12655 dpv
51332 12774 dpv
51214 12892 dpv
50978 13010 dpv
50741 13010 dpv
50386 13010 dpv
50150 12892 dpv
50031 12892 dpv
49795 12774 dpv
49558 12537 dpv
49440 12419 dpv
49322 12182 dpv
49322 11946 dpv
49322 11709 dpv
49322 11473 dpv
49440 11236 dpv
49558 11118 dpv
49795 10881 dpv
49913 10763 dpv
50150 10763 dpv
50386 10645 dpv
50741 10645 dpv
50978 10645 dpv
51214 10763 dpv
51332 10881 dpv
51569 10999 dpv
51687 11236 dpv
51806 11354 dpv
51924 11591 dpv
dpu
17386 20935 dlt
355 0 dlv
0 710 dlv
473 0 dlv
0 -710 dlv
474 0 dlv
0 710 dlv
473 0 dlv
0 -710 dlv
355 0 dlv
dle
0 -2366 21053 20107 dls
0 2366 21053 22472 dls
0 710 21053 21526 dls
-710 0 21408 21881 dls
-710 0 21408 20698 dls
22354 21290 dpb
22354 21526 dpv
22236 21763 dpv
22118 21881 dpv
21999 22118 dpv
21763 22236 dpv
21645 22354 dpv
21408 22472 dpv
21171 22472 dpv
20817 22472 dpv
20580 22354 dpv
20462 22354 dpv
20225 22236 dpv
19989 21999 dpv
19870 21881 dpv
19752 21645 dpv
19752 21408 dpv
19752 21171 dpv
19752 20935 dpv
19870 20698 dpv
19989 20580 dpv
20225 20343 dpv
20343 20225 dpv
20580 20225 dpv
20817 20107 dpv
21171 20107 dpv
21408 20107 dpv
21645 20225 dpv
21763 20343 dpv
21999 20462 dpv
22118 20698 dpv
22236 20817 dpv
22354 21053 dpv
dpu
28032 20935 dlt
354 0 dlv
0 710 dlv
474 0 dlv
0 -710 dlv
473 0 dlv
0 710 dlv
473 0 dlv
0 -710 dlv
355 0 dlv
dle
0 -2366 31698 20107 dls
0 2366 31698 22472 dls
0 710 31698 21526 dls
-710 0 32053 21881 dls
-710 0 32053 20698 dls
32999 21290 dpb
32999 21526 dpv
32881 21763 dpv
32763 21881 dpv
32644 22118 dpv
32408 22236 dpv
32290 22354 dpv
32053 22472 dpv
31816 22472 dpv
31462 22472 dpv
31225 22354 dpv
31107 22354 dpv
30870 22236 dpv
30634 21999 dpv
30515 21881 dpv
30397 21645 dpv
30397 21408 dpv
30397 21171 dpv
30397 20935 dpv
30515 20698 dpv
30634 20580 dpv
30870 20343 dpv
30989 20225 dpv
31225 20225 dpv
31462 20107 dpv
31816 20107 dpv
32053 20107 dpv
32290 20225 dpv
32408 20343 dpv
32644 20462 dpv
32763 20698 dpv
32881 20817 dpv
32999 21053 dpv
dpu
0 -4731 5677 15376 dls
0 -4731 5677 29569 dls
9462 9462 946 15376 dbu
70730 29569 dlt
0 -3548 dlv
dle
69547 26021 dlt
2366 -2366 dlv
dle
71913 26021 dlt
-2366 -2366 dlv
dle
2366 2366 69547 23655 dbu
0 4731 5677 33118 dls
5914 0 2720 37849 dls
47773 28978 dlt
0 1183 dlv
450 -1183 dlv
451 1183 dlv
0 -1183 dlv
dle
49125 30161 dlt
0 -845 dlv
56 -169 dlv
113 -113 dlv
169 -56 dlv
112 0 dlv
169 56 dlv
113 113 dlv
56 169 dlv
0 845 dlv
dle
789 -1183 50307 30161 dls
-789 -1183 51096 30161 dls
0 -789 1230 21487 dls
1230 21262 dlt
169 168 dlv
113 57 dlv
169 0 dlv
112 -57 dlv
57 -168 dlv
0 -564 dlv
dle
1850 21262 dlt
169 168 dlv
112 57 dlv
169 0 dlv
113 -57 dlv
56 -168 dlv
0 -564 dlv
dle
338 -789 2807 21487 dls
3483 21487 dlt
-338 -789 dlv
-112 -225 dlv
-113 -113 dlv
-113 -56 dlv
-56 0 dlv
dle
901 0 3652 20586 dls
5511 21318 dlt
-57 112 dlv
-169 57 dlv
-169 0 dlv
-169 -57 dlv
-56 -112 dlv
56 -113 dlv
113 -56 dlv
282 -56 dlv
112 -57 dlv
57 -112 dlv
0 -57 dlv
-57 -112 dlv
-169 -57 dlv
-169 0 dlv
-169 57 dlv
-56 112 dlv
dle
5905 21487 dlt
0 -563 dlv
56 -169 dlv
113 -57 dlv
169 0 dlv
113 57 dlv
169 169 dlv
dle
0 -789 6525 21487 dls
0 -1183 6975 21487 dls
6975 21318 dlt
113 112 dlv
112 57 dlv
169 0 dlv
113 -57 dlv
113 -112 dlv
56 -169 dlv
0 -113 dlv
-56 -169 dlv
-113 -112 dlv
-113 -57 dlv
-169 0 dlv
-112 57 dlv
-113 112 dlv
dle
0 -1183 8045 21487 dls
8045 21318 dlt
113 112 dlv
113 57 dlv
169 0 dlv
112 -57 dlv
113 -112 dlv
56 -169 dlv
0 -113 dlv
-56 -169 dlv
-113 -112 dlv
-112 -57 dlv
-169 0 dlv
-113 57 dlv
-113 112 dlv
dle
0 -1183 9115 21881 dls
338 -789 9453 21487 dls
10129 21487 dlt
-338 -789 dlv
-112 -225 dlv
-113 -113 dlv
-113 -56 dlv
-56 0 dlv
dle
0 4732 5677 5913 dls
0 3549 5677 29569 dls
0 7097 21053 24838 dls
0 5914 21053 11827 dls
5914 0 21053 11827 dls
0 5914 26967 5913 dls
27558 11827 dpb
27558 11946 dpv
27440 12182 dpv
27322 12300 dpv
27204 12419 dpv
27085 12419 dpv
26849 12419 dpv
26731 12419 dpv
26612 12300 dpv
26494 12182 dpv
26376 11946 dpv
26376 11827 dpv
26376 11709 dpv
26494 11473 dpv
26612 11354 dpv
26731 11236 dpv
26849 11236 dpv
27085 11236 dpv
27204 11236 dpv
27322 11354 dpv
27440 11473 dpv
27558 11709 dpv
dps
4731 0 26967 11827 dls
0 5914 31698 11827 dls
0 2366 31698 24838 dls
15376 0 21053 31935 dls
4731 0 31698 27204 dls
0 4731 50623 15376 dls
0 2366 50623 5913 dls
9462 0 61268 29569 dls
33529 32763 dlt
450 1183 dlv
451 -1183 dlv
dle
563 0 33698 33157 dls
33639 28651 dlt
506 0 dlv
169 -56 dlv
57 -57 dlv
56 -112 dlv
0 -169 dlv
-56 -113 dlv
-57 -56 dlv
-169 -56 dlv
-506 0 dlv
0 1182 dlv
506 0 dlv
169 -56 dlv
57 -56 dlv
56 -113 dlv
0 -113 dlv
-56 -112 dlv
-57 -57 dlv
-169 -56 dlv
dle
48781 17043 dlt
-113 -113 dlv
-56 -169 dlv
0 -225 dlv
56 -169 dlv
113 -113 dlv
113 0 dlv
112 57 dlv
57 56 dlv
56 113 dlv
113 338 dlv
56 112 dlv
56 57 dlv
113 56 dlv
169 0 dlv
113 -113 dlv
56 -169 dlv
0 -225 dlv
-56 -169 dlv
-113 -113 dlv
dle
48612 18169 dlt
0 -732 dlv
1183 0 dlv
0 732 dlv
dle
0 451 49175 17437 dls
48612 18507 dlt
1183 0 dlv
0 676 dlv
dle
64732 31580 dlt
-113 -56 dlv
-113 -113 dlv
-56 -113 dlv
-56 -169 dlv
0 -281 dlv
56 -169 dlv
56 -113 dlv
113 -113 dlv
113 -56 dlv
225 0 dlv
113 56 dlv
112 113 dlv
57 113 dlv
56 169 dlv
0 281 dlv
-56 169 dlv
-57 113 dlv
-112 113 dlv
-113 56 dlv
-225 0 dlv
dle
65689 31580 dlt
0 -845 dlv
57 -169 dlv
112 -113 dlv
169 -56 dlv
113 0 dlv
169 56 dlv
112 113 dlv
57 169 dlv
0 845 dlv
dle
0 -1183 67154 31580 dls
789 0 66759 31580 dls
37195 32526 dlt
451 1183 dlv
451 -1183 dlv
dle
564 0 37364 32920 dls
52290 21712 dlt
-113 113 dlv
-169 56 dlv
-225 0 dlv
-169 -56 dlv
-113 -113 dlv
0 -113 dlv
57 -112 dlv
56 -57 dlv
113 -56 dlv
338 -112 dlv
112 -57 dlv
57 -56 dlv
56 -113 dlv
0 -169 dlv
-113 -112 dlv
-169 -57 dlv
-225 0 dlv
-169 57 dlv
-113 112 dlv
dle
53416 21881 dlt
-732 0 dlv
0 -1183 dlv
732 0 dlv
dle
451 0 52684 21318 dls
53754 21881 dlt
0 -1183 dlv
676 0 dlv
dle
37364 28415 dlt
507 0 dlv
169 -57 dlv
57 -56 dlv
56 -113 dlv
0 -169 dlv
-56 -112 dlv
-57 -57 dlv
-169 -56 dlv
-507 0 dlv
0 1183 dlv
507 0 dlv
169 -57 dlv
57 -56 dlv
56 -112 dlv
0 -113 dlv
-56 -113 dlv
-57 -56 dlv
-169 -56 dlv
dle
57517 31343 dlt
-113 -56 dlv
-113 -113 dlv
-56 -112 dlv
-56 -169 dlv
0 -282 dlv
56 -169 dlv
56 -112 dlv
113 -113 dlv
113 -56 dlv
225 0 dlv
113 56 dlv
112 113 dlv
57 112 dlv
56 169 dlv
0 282 dlv
-56 169 dlv
-57 112 dlv
-112 113 dlv
-113 56 dlv
-225 0 dlv
dle
58474 31343 dlt
0 -844 dlv
57 -169 dlv
112 -113 dlv
169 -56 dlv
113 0 dlv
169 56 dlv
112 113 dlv
57 169 dlv
0 844 dlv
dle
0 -1182 59939 31343 dls
789 0 59544 31343 dls
6939 2917 dlt
236 -552 dlv
237 552 dlv
dle
8042 2799 dlt
-39 79 dlv
-118 39 dlv
-119 0 dlv
-118 -39 dlv
-39 -79 dlv
39 -79 dlv
79 -40 dlv
197 -39 dlv
79 -39 dlv
39 -79 dlv
0 -40 dlv
-39 -78 dlv
-118 -40 dlv
-119 0 dlv
-118 40 dlv
-39 78 dlv
dle
8713 2799 dlt
-40 79 dlv
-118 39 dlv
-118 0 dlv
-119 -39 dlv
-39 -79 dlv
39 -79 dlv
79 -40 dlv
197 -39 dlv
79 -39 dlv
40 -79 dlv
0 -40 dlv
-40 -78 dlv
-118 -40 dlv
-118 0 dlv
-119 40 dlv
-39 78 dlv
dle
28741 4100 dlt
0 -631 dlv
-39 -118 dlv
-40 -40 dlv
-78 -39 dlv
-119 0 dlv
-79 39 dlv
dle
28741 3982 dlt
-79 78 dlv
-78 40 dlv
-119 0 dlv
-79 -40 dlv
-78 -78 dlv
-40 -119 dlv
0 -79 dlv
40 -118 dlv
78 -79 dlv
79 -39 dlv
119 0 dlv
78 39 dlv
79 79 dlv
dle
0 -552 29057 4100 dls
29057 3942 dlt
118 118 dlv
79 40 dlv
118 0 dlv
79 -40 dlv
39 -118 dlv
0 -394 dlv
dle
0 -828 30239 4376 dls
30239 3982 dlt
-78 78 dlv
-79 40 dlv
-119 0 dlv
-78 -40 dlv
-79 -78 dlv
-40 -119 dlv
0 -79 dlv
40 -118 dlv
79 -79 dlv
78 -39 dlv
119 0 dlv
79 39 dlv
78 79 dlv
dle
52397 4100 dlt
0 -631 dlv
-39 -118 dlv
-40 -40 dlv
-79 -39 dlv
-118 0 dlv
-79 39 dlv
dle
52397 3982 dlt
-79 78 dlv
-79 40 dlv
-118 0 dlv
-79 -40 dlv
-79 -78 dlv
-39 -119 dlv
0 -79 dlv
39 -118 dlv
79 -79 dlv
79 -39 dlv
118 0 dlv
79 39 dlv
79 79 dlv
dle
0 -552 52712 4100 dls
52712 3942 dlt
119 118 dlv
79 40 dlv
118 0 dlv
79 -40 dlv
39 -118 dlv
0 -394 dlv
dle
0 -828 53895 4376 dls
53895 3982 dlt
-79 78 dlv
-79 40 dlv
-118 0 dlv
-79 -40 dlv
-78 -78 dlv
-40 -119 dlv
0 -79 dlv
40 -118 dlv
78 -79 dlv
79 -39 dlv
118 0 dlv
79 39 dlv
79 79 dlv
dle
3903 25367 dlt
1182 451 dlv
-1182 451 dlv
dle
5085 26550 dlt
-1182 0 dlv
0 395 dlv
56 169 dlv
113 112 dlv
112 56 dlv
169 57 dlv
282 0 dlv
169 -57 dlv
113 -56 dlv
112 -112 dlv
56 -169 dlv
0 -395 dlv
dle
5085 27733 dlt
-1182 0 dlv
0 394 dlv
56 169 dlv
113 113 dlv
112 56 dlv
169 57 dlv
282 0 dlv
169 -57 dlv
113 -56 dlv
112 -113 dlv
56 -169 dlv
0 -394 dlv
dle
3903 11292 dlt
1182 451 dlv
-1182 450 dlv
dle
4072 13207 dlt
-113 -112 dlv
-56 -169 dlv
0 -226 dlv
56 -169 dlv
113 -112 dlv
112 0 dlv
113 56 dlv
56 56 dlv
57 113 dlv
112 338 dlv
57 113 dlv
56 56 dlv
113 56 dlv
169 0 dlv
112 -112 dlv
56 -169 dlv
0 -226 dlv
-56 -169 dlv
-112 -112 dlv
dle
4072 14334 dlt
-113 -113 dlv
-56 -169 dlv
0 -225 dlv
56 -169 dlv
113 -113 dlv
112 0 dlv
113 57 dlv
56 56 dlv
57 113 dlv
112 337 dlv
57 113 dlv
56 56 dlv
113 57 dlv
169 0 dlv
112 -113 dlv
56 -169 dlv
0 -225 dlv
-56 -169 dlv
-112 -113 dlv
dle
6939 36035 dlt
236 -552 dlv
237 552 dlv
dle
0 -828 8082 36311 dls
8082 35917 dlt
-79 79 dlv
-79 39 dlv
-118 0 dlv
-79 -39 dlv
-79 -79 dlv
-39 -118 dlv
0 -79 dlv
39 -119 dlv
79 -78 dlv
79 -40 dlv
118 0 dlv
79 40 dlv
79 78 dlv
dle
0 -828 8831 36311 dls
8831 35917 dlt
-79 79 dlv
-79 39 dlv
-118 0 dlv
-79 -39 dlv
-79 -79 dlv
-39 -118 dlv
0 -79 dlv
39 -119 dlv
79 -78 dlv
79 -40 dlv
118 0 dlv
79 40 dlv
79 78 dlv
dle
35956 31462 36902 32408 dbs
35956 26731 36902 27677 dbs
50150 19634 51096 20580 dbs
60795 29096 61741 30042 dbs
5204 5440 6150 6387 dbs
26494 5440 27440 6387 dbs
50150 5440 51096 6387 dbs
50150 14903 51096 15849 dbs
50150 7806 51096 8752 dbs
20580 24365 21526 25311 dbs
20580 17268 21526 18214 dbs
31225 24365 32171 25311 dbs
31225 17268 32171 18214 dbs
5204 10171 6150 11118 dbs
5204 29096 6150 30042 dbs
70257 29096 71203 30042 dbs
5204 32644 6150 33591 dbs
0 0 72000 39032 clwin
gfs
%%Trailer
%%EOF
